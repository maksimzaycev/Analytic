{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.reports.table.row.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle as fasColor } from '@fortawesome/free-solid-svg-icons';\nimport '../css/main.css';\n\nvar ReportsRowTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportsRowTable, _React$Component);\n\n  function ReportsRowTable(props) {\n    var _this;\n\n    _classCallCheck(this, ReportsRowTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportsRowTable).call(this, props));\n    _this.toggleChartClick = _this.toggleChartClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      charts: props.chartReports\n    };\n    return _this;\n  }\n\n  _createClass(ReportsRowTable, [{\n    key: \"toggleChartClick\",\n    value: function toggleChartClick(event) {\n      var presentButton = event.currentTarget;\n      var presentButtonType = presentButton.getAttribute('data-type');\n      this.props.toggleChart(presentButtonType);\n\n      if (presentButton.classList.contains('reports__row--active')) {\n        presentButton.classList.remove('reports__row--active');\n        presentButton.classList.add('reports__row--disabled');\n      } else {\n        presentButton.classList.remove('reports__row--disabled');\n        presentButton.classList.add('reports__row--active');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rowActivity = this.props.active ? 'reports__row reports__row--body reports__row--active' : 'reports__row reports__row--body reports__row--disabled';\n      return React.createElement(\"tr\", {\n        className: rowActivity,\n        onClick: this.toggleChartClick,\n        \"data-id\": this.props.id,\n        \"data-type\": this.props.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"reports__cell reports__cell--body reports__cell--circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasColor,\n        color: this.props.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"reports__cell reports__cell--body reports__cell--title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"td\", {\n        className: \"reports__cell reports__cell--body reports__cell--visits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.count));\n    }\n  }]);\n\n  return ReportsRowTable;\n}(React.Component);\n\nexport default ReportsRowTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.reports.table.row.js"],"names":["React","FontAwesomeIcon","faCircle","fasColor","ReportsRowTable","props","toggleChartClick","bind","state","charts","chartReports","event","presentButton","currentTarget","presentButtonType","getAttribute","toggleChart","classList","contains","remove","add","rowActivity","active","id","type","color","name","count","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAQ,IAAIC,QAArB,QAAoC,mCAApC;AACA,OAAO,iBAAP;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEJ,KAAK,CAACK;AADL,KAAb;AAJe;AAOlB;;;;qCAEgBC,K,EAAO;AACpB,UAAIC,aAAa,GAAGD,KAAK,CAACE,aAA1B;AACA,UAAIC,iBAAiB,GAAGF,aAAa,CAACG,YAAd,CAA2B,WAA3B,CAAxB;AACA,WAAKV,KAAL,CAAWW,WAAX,CAAuBF,iBAAvB;;AACA,UAAIF,aAAa,CAACK,SAAd,CAAwBC,QAAxB,CAAiC,sBAAjC,CAAJ,EAA8D;AAC1DN,QAAAA,aAAa,CAACK,SAAd,CAAwBE,MAAxB,CAA+B,sBAA/B;AACAP,QAAAA,aAAa,CAACK,SAAd,CAAwBG,GAAxB,CAA4B,wBAA5B;AACH,OAHD,MAGO;AACHR,QAAAA,aAAa,CAACK,SAAd,CAAwBE,MAAxB,CAA+B,wBAA/B;AACAP,QAAAA,aAAa,CAACK,SAAd,CAAwBG,GAAxB,CAA4B,sBAA5B;AACH;AACJ;;;6BAEQ;AACL,UAAIC,WAAW,GAAG,KAAKhB,KAAL,CAAWiB,MAAX,GAAoB,sDAApB,GAA6E,wDAA/F;AACA,aACI;AAAI,QAAA,SAAS,EAAED,WAAf;AAA4B,QAAA,OAAO,EAAE,KAAKf,gBAA1C;AAA4D,mBAAS,KAAKD,KAAL,CAAWkB,EAAhF;AAAoF,qBAAW,KAAKlB,KAAL,CAAWmB,IAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,yDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAErB,QAAvB;AAAiC,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWoB,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxE,CADJ,EAEI;AAAI,QAAA,SAAS,EAAC,wDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwE,KAAKpB,KAAL,CAAWqB,IAAnF,CAFJ,EAGI;AAAI,QAAA,SAAS,EAAC,yDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyE,KAAKrB,KAAL,CAAWsB,KAApF,CAHJ,CADJ;AAOH;;;;EAhCyB3B,KAAK,CAAC4B,S;;AAmCpC,eAAexB,eAAf","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircle as fasColor} from '@fortawesome/free-solid-svg-icons'\nimport '../css/main.css';\n\nclass ReportsRowTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleChartClick = this.toggleChartClick.bind(this);\n\n        this.state = {\n            charts: props.chartReports\n        };\n    }\n\n    toggleChartClick(event) {\n        var presentButton = event.currentTarget;\n        var presentButtonType = presentButton.getAttribute('data-type');\n        this.props.toggleChart(presentButtonType);\n        if (presentButton.classList.contains('reports__row--active')) {\n            presentButton.classList.remove('reports__row--active');\n            presentButton.classList.add('reports__row--disabled');\n        } else {\n            presentButton.classList.remove('reports__row--disabled');\n            presentButton.classList.add('reports__row--active');\n        }\n    }\n\n    render() {\n        var rowActivity = this.props.active ? 'reports__row reports__row--body reports__row--active' : 'reports__row reports__row--body reports__row--disabled';        \n        return (\n            <tr className={rowActivity} onClick={this.toggleChartClick} data-id={this.props.id} data-type={this.props.type}>\n                <td className=\"reports__cell reports__cell--body reports__cell--circle\"><FontAwesomeIcon icon={fasColor} color={this.props.color} /></td>\n                <td className=\"reports__cell reports__cell--body reports__cell--title\">{this.props.name}</td>\n                <td className=\"reports__cell reports__cell--body reports__cell--visits\">{this.props.count}</td>\n            </tr>\n        );\n    }\n}\n\nexport default ReportsRowTable;\n"]},"metadata":{},"sourceType":"module"}