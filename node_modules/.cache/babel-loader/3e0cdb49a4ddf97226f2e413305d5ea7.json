{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.logs.table.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort as fasSort } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport LogsRowTable from './React.logs.table.row';\nimport LogsRowNull from './React.logs.table.rowNull';\nimport '../css/main.css';\n\nvar LogsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogsTable, _Component);\n\n  function LogsTable(props) {\n    var _this;\n\n    _classCallCheck(this, LogsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogsTable).call(this, props));\n\n    _this.sortByTime = function () {\n      var toggleSort = _this.state.waySortTime;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.time, 'HH:mm');\n        var dateB = moment(a.time, 'HH:mm');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortTime: toggleSort\n      });\n    };\n\n    _this.sortByDate = function () {\n      var toggleSort = _this.state.waySortDate;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.time, 'DD.MM.YYYY');\n        var dateB = moment(a.time, 'DD.MM.YYYY');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortDate: toggleSort\n      });\n    };\n\n    _this.sortByName = function () {\n      var toggleSort = _this.state.waySortName;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var nameA = a.name.toLowerCase();\n        var nameB = b.name.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortName: toggleSort\n      });\n    };\n\n    _this.sortByCompany = function () {\n      var toggleSort = _this.state.waySortCompany;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var companyA = a.company.toLowerCase();\n        var companyB = b.company.toLowerCase();\n        if (companyA < companyB) return -1;\n        if (companyA > companyB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortCompany: toggleSort\n      });\n    };\n\n    _this.sortByLong = function () {\n      var toggleSort = _this.state.waySortLong;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.long, 'HH:mm');\n        var dateB = moment(a.long, 'HH:mm');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortLong: toggleSort\n      });\n    };\n\n    _this.sortByPages = function () {\n      var toggleSort = _this.state.waySortPages;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.pages - b.pages;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortPages: toggleSort\n      });\n    };\n\n    _this.state = {\n      rows: _this.props.rows,\n      waySortTime: false,\n      waySortDate: false,\n      waySortName: false,\n      waySortCompany: false,\n      waySortLong: false,\n      waySortPages: false\n    };\n    return _this;\n  }\n\n  _createClass(LogsTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('Логи в таблице:');\n      console.log(this.state.rows);\n      return React.createElement(\"div\", {\n        className: \"logs__table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logs__head-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), \" \\u0414\\u0430\\u0442\\u0430\"), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), \" \\u0412\\u0440\\u0435\\u043C\\u044F\"), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), \" \\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), \" \\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0438\\u0446\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--pages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByPages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \" \\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--longFull\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByLong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), \" \\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"), React.createElement(\"div\", {\n        className: \"logs__head-cell logs__head-cell--actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), this.state.rows.length !== 0 ? this.state.rows.map(function (row, i) {\n        return React.createElement(LogsRowTable, {\n          key: row.id,\n          id: row.id,\n          userId: row.userId,\n          index: i,\n          date: row.date,\n          time: row.time,\n          name: row.name,\n          company: row.company,\n          long: row.long,\n          pages: row.logItems.length,\n          logItems: row.logItems,\n          updateRow: _this2.props.updateRow,\n          removeRow: _this2.props.removeRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        });\n      }) : React.createElement(LogsRowNull, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LogsTable;\n}(Component);\n\nexport default LogsTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.logs.table.js"],"names":["React","Component","FontAwesomeIcon","faSort","fasSort","moment","LogsRowTable","LogsRowNull","LogsTable","props","sortByTime","toggleSort","state","waySortTime","sortRows","rows","sort","a","b","dateA","time","dateB","reverse","setState","sortByDate","waySortDate","sortByName","waySortName","nameA","name","toLowerCase","nameB","sortByCompany","waySortCompany","companyA","company","companyB","sortByLong","waySortLong","long","sortByPages","waySortPages","pages","nextProps","console","log","length","map","row","i","id","userId","date","logItems","updateRow","removeRow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort as fasSort} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport LogsRowTable from './React.logs.table.row';\nimport LogsRowNull from './React.logs.table.rowNull';\nimport '../css/main.css';\n\nclass LogsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: this.props.rows,\n            waySortTime: false,\n            waySortDate: false,\n            waySortName: false,\n            waySortCompany: false,\n            waySortLong: false,\n            waySortPages: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            rows: nextProps.rows\n        });\n    }\n\n    sortByTime = () => {\n        let toggleSort = this.state.waySortTime;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.time, 'HH:mm');\n            let dateB = moment(a.time, 'HH:mm');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;  \n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortTime: toggleSort\n        });\n    };\n\n    sortByDate = () => {\n        let toggleSort = this.state.waySortDate;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.time, 'DD.MM.YYYY');\n            let dateB = moment(a.time, 'DD.MM.YYYY');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;  \n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortDate: toggleSort\n        });\n    };\n\n    sortByName = () => {\n        var toggleSort = this.state.waySortName;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var nameA = a.name.toLowerCase();\n            var nameB = b.name.toLowerCase();\n            if (nameA < nameB)\n                return -1\n            if (nameA > nameB)\n                return 1\n            return 0\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortName: toggleSort\n        });\n    };\n\n    sortByCompany = () => {\n        var toggleSort = this.state.waySortCompany;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var companyA = a.company.toLowerCase();\n            var companyB = b.company.toLowerCase();\n            if (companyA < companyB)\n                return -1\n            if (companyA > companyB)\n                return 1\n            return 0\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortCompany: toggleSort\n        });\n    };\n\n    sortByLong = () => {\n        let toggleSort = this.state.waySortLong;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.long, 'HH:mm');\n            let dateB = moment(a.long, 'HH:mm');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortLong: toggleSort\n        });\n    };\n\n    sortByPages = () => {\n        var toggleSort = this.state.waySortPages;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.pages - b.pages\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortPages: toggleSort\n        });\n    };\n\n    render() {\n        console.log('Логи в таблице:');\n        console.log(this.state.rows);\n        return (\n            <div className=\"logs__table\">\n                <div className=\"logs__head-row\">\n                    <div className=\"logs__head-cell logs__head-cell--action\"></div>\n                    <div className=\"logs__head-cell logs__head-cell--date\"><FontAwesomeIcon icon={fasSort} color=\"#0079c2\" onClick={this.sortByDate} /> Дата</div>\n                    <div className=\"logs__head-cell logs__head-cell--time\"><FontAwesomeIcon icon={fasSort} color=\"#0079c2\" onClick={this.sortByTime} /> Время</div>\n                    <div className=\"logs__head-cell logs__head-cell--name\"><FontAwesomeIcon icon={fasSort} color=\"#0079c2\" onClick={this.sortByName} /> Пользователь</div>\n                    <div className=\"logs__head-cell logs__head-cell--company\"><FontAwesomeIcon icon={fasSort} color=\"#0079c2\" onClick={this.sortByCompany} /> Организиция</div>\n                    <div className=\"logs__head-cell logs__head-cell--pages\"><FontAwesomeIcon icon={fasSort} color=\"#0079c2\" onClick={this.sortByPages} /> Просмотров</div>\n                    <div className=\"logs__head-cell logs__head-cell--longFull\"><FontAwesomeIcon icon={fasSort} color=\"#0079c2\" onClick={this.sortByLong} /> Длительность</div>\n                    <div className=\"logs__head-cell logs__head-cell--actions\"></div>\n                </div>\n                {\n                    (this.state.rows.length !== 0) ? (\n                        this.state.rows.map((row, i) => (\n                            <LogsRowTable\n                                key={row.id}\n                                id={row.id}\n                                userId={row.userId}\n                                index={i}\n                                date={row.date}\n                                time={row.time}\n                                name={row.name}\n                                company={row.company}\n                                long={row.long}\n                                pages={row.logItems.length}\n                                logItems={row.logItems}\n                                updateRow={this.props.updateRow}\n                                removeRow={this.props.removeRow}\n                            />\n                        ))\n                    ) : <LogsRowNull />\n                }\n            </div>\n        );\n    }\n}\n\nexport default LogsTable;"]},"metadata":{},"sourceType":"module"}