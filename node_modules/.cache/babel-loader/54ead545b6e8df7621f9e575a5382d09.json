{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.user.js\";\nimport React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport UserWorkspace from './React.user.workspace';\nimport '../css/main.css';\nvar urlUsers = 'http://localhost:3000/users';\nvar urlLogs = 'http://localhost:3000/logs';\n\nvar User =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(User, _React$Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.setPeriod = function (changedPeriod) {\n      _this.setState({\n        settingPeriod: changedPeriod,\n        loading: false\n      }, _this.loadData());\n    };\n\n    _this.state = {\n      userId: parseInt(_this.props.match.params.userId),\n      userName: '',\n      userUnit: '',\n      userCompany: '',\n      userLogs: [],\n      systemObjects: [],\n      chartVisits: [],\n      chartViews: [],\n      settingPeriod: moment(new Date()).format('MM.YYYY'),\n      startDate: '',\n      finishDate: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadData(this.state.settingPeriod);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData(period) {\n      var _this2 = this;\n\n      dataLoad(urlUsers + '?id=' + this.state.userId).then(function (responseUser) {\n        return JSON.parse(responseUser);\n      }).then(function (resultUser) {\n        dataLoad(urlLogs + '?userId=' + _this2.state.userId + '&period=' + period).then(function (responseLogs) {\n          return JSON.parse(responseLogs);\n        }).then(function (resultLogs) {\n          return _this2.parseData(resultUser[0], resultLogs, period);\n        }).catch(function (e) {\n          return console.log(e);\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(user, logs, period) {\n      var finishDate = moment(this.state.settingPeriod, 'MM.YYYY').subtract(1, \"days\");\n      var startDate = moment(this.state.settingPeriod, 'MM.YYYY').subtract(30, \"days\");\n      var chartVisits = this.sortVisitsChart(logs);\n      var chartViews = this.sortViewsChart(logs);\n      this.setState({\n        userName: user.name,\n        userUnit: user.unit,\n        userCompany: user.company,\n        userLogs: logs,\n        chartVisits: chartVisits,\n        chartViews: chartViews,\n        startDate: startDate.format('DD.MM'),\n        finishDate: finishDate.format('DD.MM'),\n        settingPeriod: period,\n        loading: true\n      });\n    }\n  }, {\n    key: \"sortVisitsChart\",\n    value: function sortVisitsChart(userLogs) {\n      var currentlyDate = moment('01.' + this.state.settingPeriod, 'DD.MM.YYY');\n      var sortVisits = [];\n\n      for (var i = 30; i > 0; i--) {\n        var visitsOnDay = 0;\n\n        for (var j = 0; j < userLogs.length; j++) {\n          if (userLogs[j].date.slice(0, 5) === currentlyDate.format('DD.MM')) {\n            visitsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: currentlyDate.format('DD.MM'),\n          y: visitsOnDay\n        };\n        currentlyDate = currentlyDate.add(1, \"days\");\n        sortVisits.push(oneDayValue);\n      }\n\n      return sortVisits;\n    }\n  }, {\n    key: \"sortViewsChart\",\n    value: function sortViewsChart(userLogs) {\n      var currentlyDate = moment('01.' + this.state.settingPeriod, 'DD.MM.YYYY');\n      var sortViews = [];\n\n      for (var i = 30; i > 0; i--) {\n        var viewsOnDay = 0;\n\n        for (var j = 0; j < userLogs.length; j++) {\n          if (userLogs[j].date.slice(0, 5) === currentlyDate.format('DD.MM')) {\n            viewsOnDay = viewsOnDay + userLogs[j].pages;\n          }\n        }\n\n        var oneDayValue = {\n          x: currentlyDate.format('DD.MM'),\n          y: viewsOnDay\n        };\n        currentlyDate = currentlyDate.add(1, \"days\");\n        sortViews.push(oneDayValue);\n      }\n\n      return sortViews;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"maskComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, !this.state.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        id: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        activeItem: this.props.activeItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel\",\n        id: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(UserWorkspace, {\n        userName: this.state.userName,\n        userUnit: this.state.userUnit,\n        userCompany: this.state.userCompany,\n        userLogs: this.state.userLogs,\n        chartVisits: this.state.chartVisits,\n        chartViews: this.state.chartViews,\n        startDate: this.state.startDate,\n        finishDate: this.state.finishDate,\n        setPeriod: this.setPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport default User;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.user.js"],"names":["React","dataLoad","Navigation","Loader","moment","UserWorkspace","urlUsers","urlLogs","User","props","setPeriod","changedPeriod","setState","settingPeriod","loading","loadData","state","userId","parseInt","match","params","userName","userUnit","userCompany","userLogs","systemObjects","chartVisits","chartViews","Date","format","startDate","finishDate","period","then","responseUser","JSON","parse","resultUser","responseLogs","resultLogs","parseData","catch","e","console","log","user","logs","subtract","sortVisitsChart","sortViewsChart","name","unit","company","currentlyDate","sortVisits","i","visitsOnDay","j","length","date","slice","oneDayValue","x","y","add","push","sortViews","viewsOnDay","pages","activeItem","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment'\nimport UserWorkspace from './React.user.workspace';\nimport '../css/main.css';\n\nconst urlUsers = 'http://localhost:3000/users';\nconst urlLogs = 'http://localhost:3000/logs';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userId: parseInt(this.props.match.params.userId),\n            userName: '',\n            userUnit: '',\n            userCompany: '',\n            userLogs: [],\n            systemObjects: [],\n            chartVisits: [],\n            chartViews: [],\n            settingPeriod: moment(new Date()).format('MM.YYYY'),\n            startDate: '',\n            finishDate: '',\n            loading: false\n        };\n    }\n\n    componentWillMount() {\n        this.loadData(this.state.settingPeriod);\n    }\n\n    loadData(period) {\n        dataLoad(urlUsers + '?id=' + this.state.userId)\n            .then(responseUser => {\n                return JSON.parse(responseUser);\n            })\n            .then(resultUser => {\n                dataLoad(urlLogs + '?userId=' + this.state.userId + '&period=' + period)\n                .then(responseLogs => {\n                    return JSON.parse(responseLogs);\n                })\n                .then(resultLogs => this.parseData(resultUser[0], resultLogs, period))\n                .catch(e => console.log(e));\n            })\n            .catch(e => console.log(e));\n    }\n\n    parseData(user, logs, period) {\n        let finishDate = moment(this.state.settingPeriod, 'MM.YYYY').subtract(1, \"days\");\n        let startDate = moment(this.state.settingPeriod, 'MM.YYYY').subtract(30, \"days\");\n        let chartVisits = this.sortVisitsChart(logs);\n        let chartViews = this.sortViewsChart(logs);\n\n        this.setState({\n            userName: user.name,\n            userUnit: user.unit,\n            userCompany: user.company,\n            userLogs: logs,\n            chartVisits: chartVisits,\n            chartViews: chartViews,\n            startDate: startDate.format('DD.MM'),\n            finishDate: finishDate.format('DD.MM'),\n            settingPeriod: period,\n            loading: true\n        });\n    }\n\n    sortVisitsChart(userLogs) {\n        let currentlyDate = moment('01.' + this.state.settingPeriod, 'DD.MM.YYY');\n        let sortVisits = [];\n        \n        for (let i = 30; i > 0; i--) {\n            let visitsOnDay = 0;\n            for (let j = 0; j < userLogs.length; j++) {\n                if (userLogs[j].date.slice(0, 5) === currentlyDate.format('DD.MM')) {\n                    visitsOnDay++;\n                }\n            }\n\n            let oneDayValue = {\n                x: currentlyDate.format('DD.MM'),\n                y: visitsOnDay\n            };\n\n            currentlyDate = currentlyDate.add(1, \"days\");\n            sortVisits.push(oneDayValue);\n        }\n\n        return sortVisits;\n    }\n\n    sortViewsChart(userLogs) {\n        let currentlyDate = moment('01.' + this.state.settingPeriod, 'DD.MM.YYYY');\n        let sortViews = [];\n\n        for (let i = 30; i > 0; i--) {\n            let viewsOnDay = 0;\n            for (let j = 0; j < userLogs.length; j++) {\n                if (userLogs[j].date.slice(0, 5) === currentlyDate.format('DD.MM')) {\n                    viewsOnDay = viewsOnDay + userLogs[j].pages;\n                }\n            }\n\n            let oneDayValue = {\n                x: currentlyDate.format('DD.MM'),\n                y: viewsOnDay\n            };\n\n            currentlyDate = currentlyDate.add(1, \"days\");\n            sortViews.push(oneDayValue);\n        }\n\n        return sortViews;\n    }\n\n    setPeriod = (changedPeriod) => {\n        this.setState({\n            settingPeriod: changedPeriod,\n            loading: false\n        }, this.loadData());\n    }\n\n    render() {\n        return (\n            <div id=\"maskComponent\">\n                {!this.state.loading ? <Loader /> : null}\n                <div id=\"sidebar\">\n                    <Navigation activeItem={this.props.activeItem}/>\n                </div>\n                <div className=\"panel\" id=\"panel\">\n                    <UserWorkspace\n                        userName={this.state.userName}\n                        userUnit={this.state.userUnit}\n                        userCompany={this.state.userCompany}\n                        userLogs={this.state.userLogs}\n                        chartVisits={this.state.chartVisits}\n                        chartViews={this.state.chartViews}\n                        startDate={this.state.startDate}\n                        finishDate={this.state.finishDate}\n                        setPeriod={this.setPeriod}\n                    />\n                </div>                        \n            </div>\n        );\n    }\n}\n\nexport default User;\n\n"]},"metadata":{},"sourceType":"module"}