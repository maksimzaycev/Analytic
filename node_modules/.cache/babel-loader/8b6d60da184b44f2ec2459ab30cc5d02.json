{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.reports.table.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortAlphaUp as fasSortAlphaUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortAlphaDown as fasSortAlphaDown } from '@fortawesome/free-solid-svg-icons';\nimport { faSortNumericUp as fasSortNumericUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortNumericDown as fasSortNumericDown } from '@fortawesome/free-solid-svg-icons';\nimport ReportsRowTable from './React.reports.table.row';\nimport ReportsRowNull from './React.reports.table.rowNull';\nimport '../css/main.css';\n\nvar ReportsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportsTable, _React$Component);\n\n  function ReportsTable(props) {\n    var _this;\n\n    _classCallCheck(this, ReportsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportsTable).call(this, props));\n\n    _this.sortByCount = function () {\n      var toggleSort = _this.state.waySortCount;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.count - b.count;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortCount: toggleSort\n      });\n    };\n\n    _this.sortByName = function () {\n      var toggleSort = _this.state.waySortName;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var nameA = a.name.toLowerCase();\n        var nameB = b.name.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortName: toggleSort\n      });\n    };\n\n    _this.state = {\n      rows: _this.props.rows,\n      waySortCount: false,\n      waySortName: false\n    };\n    return _this;\n  }\n\n  _createClass(ReportsTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"table\", {\n        className: \"reports__table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"reports__row reports__row--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"reports__cell reports__cell--head reports__cell--circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" \"), React.createElement(\"td\", {\n        className: \"reports__cell reports__cell--head reports__cell--title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.waySortName ? React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSortAlphaDown,\n        color: \"#0079c2\",\n        onClick: this.sortByName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSortAlphaUp,\n        color: \"#0079c2\",\n        onClick: this.sortByName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \" Название отчета\"), React.createElement(\"td\", {\n        className: \"reports__cell reports__cell--head reports__cell--visits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.waySortCount ? React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSortNumericDown,\n        color: \"#0079c2\",\n        onClick: this.sortByCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }) : React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSortNumericUp,\n        color: \"#0079c2\",\n        onClick: this.sortByCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), \" Количество обращений\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.rows.length !== 0 ? this.state.rows.map(function (row, i) {\n        return React.createElement(ReportsRowTable, {\n          key: i,\n          index: i,\n          id: row.id,\n          name: row.name,\n          count: row.count,\n          color: row.color,\n          type: row.link,\n          active: row.display,\n          toggleChart: _this2.props.toggleChart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      }) : React.createElement(ReportsRowNull, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ReportsTable;\n}(React.Component);\n\nexport default ReportsTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.reports.table.js"],"names":["React","FontAwesomeIcon","faSortAlphaUp","fasSortAlphaUp","faSortAlphaDown","fasSortAlphaDown","faSortNumericUp","fasSortNumericUp","faSortNumericDown","fasSortNumericDown","ReportsRowTable","ReportsRowNull","ReportsTable","props","sortByCount","toggleSort","state","waySortCount","sortRows","rows","sort","a","b","count","reverse","setState","sortByName","waySortName","nameA","name","toLowerCase","nameB","nextProps","length","map","row","i","id","color","link","display","toggleChart","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSortAlphaUp as fasSortAlphaUp} from '@fortawesome/free-solid-svg-icons'\nimport { faSortAlphaDown as fasSortAlphaDown} from '@fortawesome/free-solid-svg-icons'\n\nimport { faSortNumericUp as fasSortNumericUp} from '@fortawesome/free-solid-svg-icons'\nimport { faSortNumericDown as fasSortNumericDown} from '@fortawesome/free-solid-svg-icons'\n\nimport ReportsRowTable from './React.reports.table.row';\nimport ReportsRowNull from './React.reports.table.rowNull';\nimport '../css/main.css';\n\nclass ReportsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: this.props.rows,\n            waySortCount: false,\n            waySortName: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            rows: nextProps.rows\n        });\n    }\n\n    sortByCount = () => {\n        var toggleSort = this.state.waySortCount;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.count - b.count\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortCount: toggleSort\n        });\n    };\n\n    sortByName = () => {\n        var toggleSort = this.state.waySortName;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var nameA = a.name.toLowerCase();\n            var nameB = b.name.toLowerCase();\n            if (nameA < nameB)\n                return -1\n            if (nameA > nameB)\n                return 1\n            return 0\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortName: toggleSort\n        });\n    };\n\n    render() {\n        return (\n            <table className=\"reports__table\">\n                <thead>\n                    <tr className=\"reports__row reports__row--head\">\n                        <td className=\"reports__cell reports__cell--head reports__cell--circle\"> </td>\n                        <td className=\"reports__cell reports__cell--head reports__cell--title\">\n                            {\n                                this.state.waySortName ?\n                                <FontAwesomeIcon className=\"sortIcon\" icon={fasSortAlphaDown} color=\"#0079c2\" onClick={this.sortByName} /> :\n                                <FontAwesomeIcon className=\"sortIcon\" icon={fasSortAlphaUp} color=\"#0079c2\" onClick={this.sortByName} />\n                            }\n                            {\" Название отчета\"}\n                        </td>\n                        <td className=\"reports__cell reports__cell--head reports__cell--visits\">\n                            {\n                                this.state.waySortCount ?\n                                <FontAwesomeIcon className=\"sortIcon\" icon={fasSortNumericDown} color=\"#0079c2\" onClick={this.sortByCount} /> :\n                                <FontAwesomeIcon className=\"sortIcon\" icon={fasSortNumericUp} color=\"#0079c2\" onClick={this.sortByCount} />\n                            }\n                            {\" Количество обращений\"}\n                        </td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    (this.state.rows.length !== 0) ? (\n                    this.state.rows.map((row, i) => (\n                        <ReportsRowTable\n                            key={i}\n                            index={i}\n                            id={row.id}\n                            name={row.name}\n                            count={row.count}\n                            color={row.color}\n                            type={row.link}\n                            active={row.display}\n                            toggleChart={this.props.toggleChart}\n                        /> )\n                    )) : <ReportsRowNull />\n                }\n                </tbody>\n            </table>\n        );\n    }\n\n}\n\nexport default ReportsTable;\n"]},"metadata":{},"sourceType":"module"}