{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.logs.workspace.js\";\nimport React, { Component } from 'react';\nimport LogsTable from './React.logs.table';\nimport AddLogs from './React.logs.add';\nimport dataAdd from '../models/dataAdd';\nimport dataDelete from '../models/dataDelete';\nimport dataLoad from '../models/dataLoad';\nimport dataUpdate from '../models/dataUpdate';\nimport FindLogs from './React.logs.find';\nimport Loader from './React.loader';\nimport '../css/main.css';\nvar urlLogs = 'http://localhost:3000/logs';\nvar urlUsers = 'http://localhost:3000/users';\n\nvar LogsWorkspace =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogsWorkspace, _Component);\n\n  function LogsWorkspace(props) {\n    var _this;\n\n    _classCallCheck(this, LogsWorkspace);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogsWorkspace).call(this, props));\n\n    _this.findRows = function (foundRows) {\n      _this.setState({\n        changedRows: foundRows\n      });\n    };\n\n    _this.addRow = function (newLogsData) {\n      var allLogsData = _this.state.rows;\n      allLogsData.push(newLogsData);\n      dataAdd(urlLogs, newLogsData).then(function (logs) {\n        _this.setState({\n          rows: allLogsData,\n          changedRows: allLogsData\n        });\n      }).catch(function (logs) {\n        console.log('error ' + logs);\n      });\n    };\n\n    _this.removeRow = function (i) {\n      var allLogsData = _this.state.rows;\n      var deleteId = allLogsData[i].id;\n      allLogsData.splice(i, 1);\n      dataDelete(urlLogs, deleteId).then(function (logs) {\n        _this.setState({\n          rows: allLogsData,\n          changedRows: allLogsData\n        });\n      }).catch(function (logs) {\n        console.log('error ' + logs);\n      });\n    };\n\n    _this.updateRow = function (id, userId, time, date, name, company, pages, long, logItems) {\n      var allLogsData = _this.state.rows;\n      var updateLogData = {\n        id: id,\n        userId: userId,\n        time: time,\n        date: date,\n        period: date.slice(3, 9),\n        name: name,\n        company: company,\n        pages: pages,\n        long: long,\n        logItems: logItems\n      };\n\n      for (var i = 0; i < allLogsData.length; i++) {\n        if (allLogsData[i].id === id) {\n          allLogsData[i] = updateLogData;\n        }\n      }\n\n      dataUpdate(urlLogs, updateLogData, updateLogData.id).then(function (logs) {\n        _this.setState({\n          rows: allLogsData,\n          changedRows: allLogsData\n        });\n      }).catch(function (logs) {\n        console.log('error ' + logs);\n      });\n    };\n\n    _this.state = {\n      rows: [],\n      changedRows: [],\n      users: [],\n      loadingLogs: false,\n      loadingUsers: false\n    };\n    return _this;\n  }\n\n  _createClass(LogsWorkspace, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadLogs();\n      this.loadUsers();\n    }\n  }, {\n    key: \"loadLogs\",\n    value: function loadLogs() {\n      var _this2 = this;\n\n      dataLoad(urlLogs).then(function (logs) {\n        _this2.setState({\n          rows: JSON.parse(logs),\n          changedRows: JSON.parse(logs),\n          loadingLogs: true\n        });\n      }).catch(function (logs) {\n        console.log('error ' + logs);\n      });\n    }\n  }, {\n    key: \"loadUsers\",\n    value: function loadUsers() {\n      var _this3 = this;\n\n      dataLoad(urlUsers).then(function (users) {\n        _this3.setState({\n          users: JSON.parse(users),\n          loadingUsers: true\n        });\n      }).catch(function (users) {\n        console.log('error ' + users);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, !this.state.loadingUsers && !this.state.loadingLogs ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(FindLogs, {\n        presentRows: this.state.rows,\n        find: this.findRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u043F\\u043E\\u0441\\u0435\\u0449\\u0435\\u043D\\u0438\\u044F\\u043C\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(AddLogs, {\n        add: this.addRow,\n        currentLogs: this.state.rows,\n        users: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"logs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(LogsTable, {\n        rows: this.state.changedRows,\n        removeRow: this.removeRow,\n        updateRow: this.updateRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LogsWorkspace;\n}(Component);\n\nexport default LogsWorkspace;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.logs.workspace.js"],"names":["React","Component","LogsTable","AddLogs","dataAdd","dataDelete","dataLoad","dataUpdate","FindLogs","Loader","urlLogs","urlUsers","LogsWorkspace","props","findRows","foundRows","setState","changedRows","addRow","newLogsData","allLogsData","state","rows","push","then","logs","catch","console","log","removeRow","i","deleteId","id","splice","updateRow","userId","time","date","name","company","pages","long","logItems","updateLogData","period","slice","length","users","loadingLogs","loadingUsers","loadLogs","loadUsers","JSON","parse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LogsTable from './React.logs.table';\nimport AddLogs from './React.logs.add';\nimport dataAdd from '../models/dataAdd';\nimport dataDelete from '../models/dataDelete';\nimport dataLoad from '../models/dataLoad';\nimport dataUpdate from '../models/dataUpdate';\nimport FindLogs from './React.logs.find';\nimport Loader from './React.loader';\nimport '../css/main.css';\n\nconst urlLogs = 'http://localhost:3000/logs';\nconst urlUsers = 'http://localhost:3000/users';\n\nclass LogsWorkspace extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: [],\n            changedRows: [],\n            users: [],\n            loadingLogs: false,\n            loadingUsers: false\n        };\n    }\n\n    componentWillMount() {\n        this.loadLogs();\n        this.loadUsers();\n    }\n\n    loadLogs() {\n        dataLoad(urlLogs).then(logs => {\n            this.setState({\n                rows: JSON.parse(logs),\n                changedRows: JSON.parse(logs),\n                loadingLogs: true\n            });\n        }).catch(function(logs) {\n            console.log('error ' + logs);\n        })\n    }\n\n    loadUsers() {\n        dataLoad(urlUsers).then(users => {\n            this.setState({\n                users: JSON.parse(users),\n                loadingUsers: true\n            });\n        }).catch(function(users) {\n            console.log('error ' + users);\n        })\n    }\n\n    findRows = (foundRows) => {\n        this.setState({\n            changedRows: foundRows\n        });\n    };\n\n\n    addRow = (newLogsData) => {\n        var allLogsData = this.state.rows;\n\n        allLogsData.push(newLogsData);\n\n        dataAdd(urlLogs, newLogsData).then(logs => {\n            this.setState({\n                rows: allLogsData,\n                changedRows: allLogsData\n            });\n        }).catch(function(logs) {\n            console.log('error ' + logs);\n        })\n    };\n\n    removeRow = (i) => {\n        var allLogsData = this.state.rows;\n        var deleteId = allLogsData[i].id;\n        \n        allLogsData.splice(i, 1);\n        \n        dataDelete(urlLogs, deleteId).then(logs => {\n            this.setState({\n                rows: allLogsData,\n                changedRows: allLogsData\n            });\n        }).catch(function(logs) {\n            console.log('error ' + logs);\n        })\n    };\n\n    updateRow = (id, userId, time, date, name, company, pages, long, logItems) => {\n        var allLogsData = this.state.rows;\n\n        var updateLogData = {\n            id: id,\n            userId: userId,\n            time: time,\n            date: date,\n            period: date.slice(3,9),\n            name: name,\n            company: company,\n            pages: pages,\n            long: long,\n            logItems: logItems\n        };\n\n        for (let i = 0; i < allLogsData.length; i++) {\n            if (allLogsData[i].id === id) {\n                allLogsData[i] = updateLogData;\n            }\n        }\n\n        dataUpdate(urlLogs, updateLogData, updateLogData.id).then(logs => {\n            this.setState({\n                rows: allLogsData,\n                changedRows: allLogsData\n            });\n        }).catch(function(logs) {\n            console.log('error ' + logs);\n        })\n\n    };\n\n    render() {\n        return (\n            <div>\n                {(!this.state.loadingUsers && !this.state.loadingLogs) ? <Loader /> : null}\n                <div className=\"filter\">\n                    <FindLogs presentRows={this.state.rows} find={this.findRows} />\n                </div>\n                <div className=\"addbar\">\n                    <h2>Панель управления посещениями пользователей</h2>\n                    <AddLogs add={this.addRow} currentLogs={this.state.rows} users={this.state.users}/>\n                </div>\n                <div className=\"logs\">\n                    <LogsTable rows={this.state.changedRows} removeRow={this.removeRow} updateRow={this.updateRow}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LogsWorkspace;\n"]},"metadata":{},"sourceType":"module"}