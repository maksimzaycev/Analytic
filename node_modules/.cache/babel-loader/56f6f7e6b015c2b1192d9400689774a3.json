{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.errors.workspace.js\";\nimport React from 'react';\nimport ErrorsTable from './React.errors.table';\nimport FindErrors from './React.errors.find';\nimport Userbar from './React.userbar';\nimport '../css/main.css';\n\nvar ErrorsWorkspace =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ErrorsWorkspace, _React$Component);\n\n  function ErrorsWorkspace(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorsWorkspace);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorsWorkspace).call(this, props));\n\n    _this.findRows = function (foundRows) {\n      _this.setState({\n        changedRows: foundRows\n      });\n    };\n\n    _this.toggleTableType = function (event) {\n      var target = event.target;\n      var value = target.getAttribute('data-type');\n\n      _this.setState({\n        rows: _this.props.errorsItems[value],\n        changedRows: _this.props.errorsItems[value],\n        type: value\n      });\n    };\n\n    _this.state = {\n      rows: [],\n      type: 'criticals',\n      changedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(ErrorsWorkspace, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.errorsItems.criticals,\n        changedRows: nextProps.errorsItems.criticals\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Userbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(FindErrors, {\n        presentRows: this.state.rows,\n        find: this.findRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\u0416\\u0443\\u0440\\u043D\\u0430\\u043B \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0439\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"\\u043E\\u0448\\u0438\\u0431\\u043A\\u0438 \\u0438 \\u043F\\u0440\\u0435\\u0434\\u0443\\u043F\\u0440\\u0435\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\")), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"errors__toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'errors__button ' + (this.state.type == 'criticals' ? 'errors__button--active' : 'errors__button--normal'),\n        \"data-type\": \"criticals\",\n        onClick: this.toggleTableType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"\\u041A\\u0440\\u0438\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: 'errors__button ' + (this.state.type == 'errors' ? 'errors__button--active' : 'errors__button--normal'),\n        \"data-type\": \"errors\",\n        onClick: this.toggleTableType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438\"), React.createElement(\"div\", {\n        className: 'errors__button ' + (this.state.type == 'warnings' ? 'errors__button--active' : 'errors__button--normal'),\n        \"data-type\": \"warnings\",\n        onClick: this.toggleTableType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u0435\\u0434\\u0443\\u043F\\u0440\\u0435\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\")), React.createElement(ErrorsTable, {\n        rows: this.state.changedRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ErrorsWorkspace;\n}(React.Component);\n\nexport default ErrorsWorkspace;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.errors.workspace.js"],"names":["React","ErrorsTable","FindErrors","Userbar","ErrorsWorkspace","props","findRows","foundRows","setState","changedRows","toggleTableType","event","target","value","getAttribute","rows","errorsItems","type","state","nextProps","criticals","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ErrorsTable from './React.errors.table';\nimport FindErrors from './React.errors.find';\nimport Userbar from './React.userbar';\nimport '../css/main.css';\n\nclass ErrorsWorkspace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: [],\n            type: 'criticals',\n            changedRows: []\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            rows: nextProps.errorsItems.criticals,\n            changedRows: nextProps.errorsItems.criticals\n        })\n    }\n\n    findRows = (foundRows) => {\n        this.setState({\n            changedRows: foundRows\n        });\n    };\n\n    toggleTableType = (event) => {\n        const target = event.target;\n        const value = target.getAttribute('data-type');\n        \n        this.setState({\n            rows: this.props.errorsItems[value],\n            changedRows: this.props.errorsItems[value],\n            type: value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Userbar>\n                    <FindErrors presentRows={this.state.rows} find={this.findRows} />\n                </Userbar>\n                \n                <div className=\"title\">\n                    <h1>Журнал событий</h1>\n                    <p>ошибки и предупреждения</p>\n                </div>\n                \n                <div className=\"data\">\n                    <div className=\"errors__toggle\">\n                        <div className={'errors__button ' + (this.state.type == 'criticals' ? 'errors__button--active' : 'errors__button--normal')} data-type=\"criticals\" onClick={this.toggleTableType}>Критические</div>\n                        <div className={'errors__button ' + (this.state.type == 'errors' ? 'errors__button--active' : 'errors__button--normal')} data-type=\"errors\" onClick={this.toggleTableType}>Ошибки</div>\n                        <div className={'errors__button ' + (this.state.type == 'warnings' ? 'errors__button--active' : 'errors__button--normal')} data-type=\"warnings\" onClick={this.toggleTableType}>Предупреждения</div>\n                    </div>\n                    <ErrorsTable rows={this.state.changedRows} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ErrorsWorkspace;"]},"metadata":{},"sourceType":"module"}