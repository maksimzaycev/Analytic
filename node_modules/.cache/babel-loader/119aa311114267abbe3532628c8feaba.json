{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.mode.js\";\nimport React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport ModeWorkspace from './React.mode.workspace';\nimport '../css/main.css';\nvar urlVisits = 'http://localhost:3000/visits';\n\nvar Mode =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mode, _React$Component);\n\n  function Mode(props) {\n    var _this;\n\n    _classCallCheck(this, Mode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mode).call(this, props));\n    _this.state = {\n      charts: {},\n      defaultChart: [],\n      strainData: [],\n      startDate: '',\n      finishDate: '',\n      settingPeriod: moment(new Date()).format('MM.YYYY'),\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Mode, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      fetch(urlVisits).then(function (response) {\n        console.log(response);\n        return response.json();\n      }).then(function (result) {\n        return _this2.parseData(result);\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(visits) {\n      console.log('Результат загрузки:');\n      console.log(visits);\n      var goodBegin = this.getGoodBeginData(visits);\n      var bedBegin = this.getBedBeginData(visits);\n      var goodEnd = this.getGoodEndData(visits);\n      var bedEnd = this.getBedEndData(visits);\n      var defaultChart = this.getDefaultChart();\n      var charts = {\n        goodBegin: {\n          chartId: 4501,\n          data: goodBegin,\n          display: true,\n          color: '#029455'\n        },\n        bedBegin: {\n          chartId: 4502,\n          data: bedBegin,\n          display: true,\n          color: '#c2012a'\n        },\n        goodEnd: {\n          chartId: 4503,\n          data: goodEnd,\n          display: true,\n          color: '#e799aa'\n        },\n        bedEnd: {\n          chartId: 4504,\n          data: bedEnd,\n          display: true,\n          color: '#9ad4bb'\n        }\n      };\n      var finishDate = moment(new Date(), 'DD.MM').subtract(1, \"days\");\n      var startDate = moment(new Date(), 'DD.MM').subtract(30, \"days\");\n      var strainData = [];\n\n      for (var i = 0; i < 30; i++) {\n        var dayData = {\n          date: charts.goodBegin.data[i].x,\n          goodBegin: charts.goodBegin.data[i].y,\n          bedBegin: charts.bedBegin.data[i].y,\n          goodEnd: charts.goodEnd.data[i].y,\n          bedEnd: charts.bedEnd.data[i].y\n        };\n        strainData.push(dayData);\n      }\n\n      this.setState({\n        charts: charts,\n        defaultChart: defaultChart,\n        strainData: strainData,\n        startDate: startDate.format('DD.MM'),\n        finishDate: finishDate.format('DD.MM'),\n        loading: true\n      });\n    }\n  }, {\n    key: \"getGoodBeginData\",\n    value: function getGoodBeginData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var goodBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].beginTime).isBefore(visits[j].startTime, 'minute')) {\n            goodBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: goodBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getBedBeginData\",\n    value: function getBedBeginData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var bedBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].beginTime).isAfter(visits[j].startTime, 'minute')) {\n            bedBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: bedBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getGoodEndData\",\n    value: function getGoodEndData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var goodBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].endTime).isBefore(visits[j].finishTime, 'minute')) {\n            goodBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: goodBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getBedEndData\",\n    value: function getBedEndData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var goodBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].endTime).isAfter(visits[j].finishTime, 'minute')) {\n            goodBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: goodBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getDefaultChart\",\n    value: function getDefaultChart() {\n      var currentlyDate = moment(new Date(), 'DD.MM');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var defaultDays = [];\n\n      for (var i = 30; i > 0; i--) {\n        var oneDay = {\n          x: startDate.format('DD.MM'),\n          y: 0\n        };\n        startDate = startDate.add(1, \"days\");\n        defaultDays.push(oneDay);\n      }\n\n      return defaultDays;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"maskComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, !this.state.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"sidebar\",\n        id: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        activeItem: 7715,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel\",\n        id: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(ModeWorkspace, {\n        charts: this.state.charts,\n        defaultChart: this.state.defaultChart,\n        strainData: this.state.strainData,\n        setPeriod: this.setPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Mode;\n}(React.Component);\n\nexport default Mode;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.mode.js"],"names":["React","dataLoad","Navigation","Loader","moment","ModeWorkspace","urlVisits","Mode","props","state","charts","defaultChart","strainData","startDate","finishDate","settingPeriod","Date","format","loading","loadData","fetch","then","response","console","log","json","result","parseData","catch","e","visits","goodBegin","getGoodBeginData","bedBegin","getBedBeginData","goodEnd","getGoodEndData","bedEnd","getBedEndData","getDefaultChart","chartId","data","display","color","subtract","i","dayData","date","x","y","push","setState","currentlyDate","monthData","goodBeginsOnDay","j","length","startTime","slice","beginTime","isBefore","oneDayValue","add","bedBeginsOnDay","isAfter","endTime","finishTime","defaultDays","oneDay","setPeriod","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment'\nimport ModeWorkspace from './React.mode.workspace';\nimport '../css/main.css';\n\nconst urlVisits = 'http://localhost:3000/visits';\n\nclass Mode extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            charts: {},\n            defaultChart: [],\n            strainData: [],\n            startDate: '',\n            finishDate: '',\n            settingPeriod: moment(new Date()).format('MM.YYYY'),\n            loading: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        fetch(urlVisits)\n            .then(function(response) {\n                console.log(response);\n\n                return response.json();\n            })\n            .then(result => this.parseData(result))\n            .catch(e => console.log(e));\n    }\n\n    parseData(visits) {\n        console.log('Результат загрузки:');\n        console.log(visits);\n        var goodBegin = this.getGoodBeginData(visits);\n        var bedBegin = this.getBedBeginData(visits);\n        var goodEnd = this.getGoodEndData(visits);\n        var bedEnd = this.getBedEndData(visits);\n        var defaultChart = this.getDefaultChart();\n\n        var charts = {\n            goodBegin: {\n                chartId: 4501,\n                data: goodBegin,\n                display: true,\n                color: '#029455'\n            },\n            bedBegin: {\n                chartId: 4502,\n                data: bedBegin,\n                display: true,\n                color: '#c2012a'\n            },\n            goodEnd: {\n                chartId: 4503,\n                data: goodEnd,\n                display: true,\n                color: '#e799aa'\n            },\n            bedEnd: {\n                chartId: 4504,\n                data: bedEnd,\n                display: true,\n                color: '#9ad4bb'\n            }\n        };\n\n        var finishDate = moment(new Date(), 'DD.MM').subtract(1, \"days\");\n        var startDate = moment(new Date(), 'DD.MM').subtract(30, \"days\");\n        var strainData = [];\n\n        for (let i = 0; i < 30; i++) {\n            var dayData = {\n                date: charts.goodBegin.data[i].x,\n                goodBegin: charts.goodBegin.data[i].y,\n                bedBegin: charts.bedBegin.data[i].y,\n                goodEnd: charts.goodEnd.data[i].y,\n                bedEnd: charts.bedEnd.data[i].y\n            }\n            strainData.push(dayData);\n        }\n\n        this.setState({\n            charts: charts,\n            defaultChart: defaultChart,\n            strainData: strainData,\n            startDate: startDate.format('DD.MM'),\n            finishDate: finishDate.format('DD.MM'),\n            loading: true\n        });\n    }\n\n    getGoodBeginData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var goodBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].beginTime).isBefore(visits[j].startTime, 'minute'))) {\n                    goodBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: goodBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getBedBeginData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var bedBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].beginTime).isAfter(visits[j].startTime, 'minute'))) {\n                    bedBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: bedBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getGoodEndData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var goodBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].endTime).isBefore(visits[j].finishTime, 'minute'))) {\n                    goodBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: goodBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getBedEndData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var goodBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].endTime).isAfter(visits[j].finishTime, 'minute'))) {\n                    goodBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: goodBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getDefaultChart() {\n        var currentlyDate = moment(new Date(), 'DD.MM');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var defaultDays = [];\n\n        for (let i = 30; i > 0; i--) {\n\n            var oneDay = {\n                x: startDate.format('DD.MM'),\n                y: 0\n            };\n\n            startDate = startDate.add(1, \"days\");\n            defaultDays.push(oneDay);\n        }\n\n        return defaultDays;\n    }\n\n    render() {\n        return (\n            <div id=\"maskComponent\">\n                {!this.state.loading ? <Loader /> : null}\n                <div className=\"sidebar\" id=\"sidebar\">\n                    <Navigation activeItem={7715} />\n                </div>\n                <div className=\"panel\" id=\"panel\">\n                    <ModeWorkspace\n                        charts={this.state.charts}\n                        defaultChart={this.state.defaultChart}\n                        strainData={this.state.strainData}\n                        setPeriod={this.setPeriod}\n                    />\n                </div>                        \n            </div>\n        );\n    }\n}\n\nexport default Mode;\n\n"]},"metadata":{},"sourceType":"module"}