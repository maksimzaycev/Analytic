{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.mode.js\";\nimport React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport ModeWorkspace from './React.month.workspace';\nimport '../css/main.css';\n\nvar Mode =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mode, _React$Component);\n\n  function Mode(props) {\n    var _this;\n\n    _classCallCheck(this, Mode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mode).call(this, props));\n    _this.state = {\n      charts: {},\n      defaultChart: [],\n      strainData: [],\n      startDate: '',\n      finishDate: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Mode, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      var urlVisits = 'http://localhost:3000/visits';\n      dataLoad(urlVisits).then(function (visits) {\n        visits = JSON.parse(visits);\n\n        var goodBegin = _this2.getGoodBeginData(visits);\n\n        console.log('Приходы во время:');\n        console.log(goodBegin);\n\n        var bedBegin = _this2.getBedBeginData(visits);\n\n        console.log('Приходы с опазданием:');\n        console.log(bedBegin);\n\n        var goodEnd = _this2.getGoodEndData(visits);\n\n        console.log('Уходы во время:');\n        console.log(goodEnd);\n\n        var bedEnd = _this2.getBedEndData(visits);\n\n        console.log('Уходы раньше времени:');\n        console.log(bedEnd);\n\n        var defaultChart = _this2.getDefaultChart();\n\n        var charts = {\n          goodBegin: {\n            chartId: 4501,\n            data: goodBegin,\n            display: true,\n            color: '#84c9f6'\n          },\n          bedBegin: {\n            chartId: 4502,\n            data: bedBegin,\n            display: true,\n            color: '#3fa6e9'\n          },\n          goodEnd: {\n            chartId: 4503,\n            data: goodEnd,\n            display: true,\n            color: '#127bbf'\n          },\n          bedEnd: {\n            chartId: 4504,\n            data: bedEnd,\n            display: true,\n            color: '#3fa6e9'\n          }\n        };\n        var finishDate = moment(new Date(), 'DD.MM').subtract(1, \"days\");\n        var startDate = moment(new Date(), 'DD.MM').subtract(30, \"days\");\n        var strainData = [];\n\n        for (var i = 0; i < 30; i++) {\n          var dayData = {\n            date: charts.users.data[i].x,\n            users: charts.users.data[i].y,\n            visits: charts.visits.data[i].y,\n            views: charts.views.data[i].y\n          };\n          strainData.push(dayData);\n        }\n\n        _this2.setState({\n          charts: charts,\n          defaultChart: defaultChart,\n          strainData: strainData,\n          startDate: startDate.format('DD.MM'),\n          finishDate: finishDate.format('DD.MM'),\n          loading: true\n        });\n      }).catch(function (logs) {\n        console.log('error ' + logs);\n      });\n    }\n  }, {\n    key: \"getGoodBeginData\",\n    value: function getGoodBeginData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var goodBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].beginTime).isAfter(visits[j].startTime, 'minute')) {\n            goodBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: goodBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getBedBeginData\",\n    value: function getBedBeginData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var bedBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          console.log(visits[j].startTime.slice(0, 10));\n          console.log(startDate.format('DD.MM.YYYY'));\n\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].beginTime).isBefore(visits[j].startTime, 'minute')) {\n            bedBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: bedBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getGoodEndData\",\n    value: function getGoodEndData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var goodBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].endTime).isAfter(visits[j].finishTime, 'minute')) {\n            goodBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: goodBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getBedEndData\",\n    value: function getBedEndData(visits) {\n      var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var monthData = [];\n\n      for (var i = 30; i > 0; i--) {\n        var goodBeginsOnDay = 0;\n\n        for (var j = 0; j < visits.length; j++) {\n          if (visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY') && moment(visits[j].endTime).isBefore(visits[j].finishTime, 'minute')) {\n            goodBeginsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: startDate.format('DD.MM'),\n          y: goodBeginsOnDay\n        };\n        startDate = startDate.add(1, \"days\");\n        monthData.push(oneDayValue);\n      }\n\n      return monthData;\n    }\n  }, {\n    key: \"getDefaultChart\",\n    value: function getDefaultChart() {\n      var currentlyDate = moment(new Date(), 'DD.MM');\n      var startDate = currentlyDate.subtract(30, \"days\");\n      var defaultDays = [];\n\n      for (var i = 30; i > 0; i--) {\n        var oneDay = {\n          x: startDate.format('DD.MM'),\n          y: 0\n        };\n        startDate = startDate.add(1, \"days\");\n        defaultDays.push(oneDay);\n      }\n\n      return defaultDays;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"maskComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, !this.state.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"sidebar\",\n        id: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        activeItem: 7717,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel\",\n        id: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(ModeWorkspace, {\n        charts: this.state.charts,\n        defaultChart: this.state.defaultChart,\n        strainData: this.state.strainData,\n        startDate: this.state.startDate,\n        finishDate: this.state.finishDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Mode;\n}(React.Component);\n\nexport default Mode;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.mode.js"],"names":["React","dataLoad","Navigation","Loader","moment","ModeWorkspace","Mode","props","state","charts","defaultChart","strainData","startDate","finishDate","loading","loadData","urlVisits","then","visits","JSON","parse","goodBegin","getGoodBeginData","console","log","bedBegin","getBedBeginData","goodEnd","getGoodEndData","bedEnd","getBedEndData","getDefaultChart","chartId","data","display","color","Date","subtract","i","dayData","date","users","x","y","views","push","setState","format","catch","logs","currentlyDate","monthData","goodBeginsOnDay","j","length","startTime","slice","beginTime","isAfter","oneDayValue","add","bedBeginsOnDay","isBefore","endTime","finishTime","defaultDays","oneDay","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment'\nimport ModeWorkspace from './React.month.workspace';\nimport '../css/main.css';\n\nclass Mode extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            charts: {},\n            defaultChart: [],\n            strainData: [],\n            startDate: '',\n            finishDate: '',\n            loading: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        var urlVisits = 'http://localhost:3000/visits';\n\n        dataLoad(urlVisits).then(visits => {\n            visits = JSON.parse(visits);\n            \n            var goodBegin = this.getGoodBeginData(visits);\n            console.log('Приходы во время:');\n            console.log(goodBegin);\n            var bedBegin = this.getBedBeginData(visits);\n            console.log('Приходы с опазданием:');\n            console.log(bedBegin);\n            var goodEnd = this.getGoodEndData(visits);\n            console.log('Уходы во время:');\n            console.log(goodEnd);\n            var bedEnd = this.getBedEndData(visits);\n            console.log('Уходы раньше времени:');\n            console.log(bedEnd);\n\n            var defaultChart = this.getDefaultChart();\n\n            var charts = {\n                goodBegin: {\n                    chartId: 4501,\n                    data: goodBegin,\n                    display: true,\n                    color: '#84c9f6'\n                },\n                bedBegin: {\n                    chartId: 4502,\n                    data: bedBegin,\n                    display: true,\n                    color: '#3fa6e9'\n                },\n                goodEnd: {\n                    chartId: 4503,\n                    data: goodEnd,\n                    display: true,\n                    color: '#127bbf'\n                },\n                bedEnd: {\n                    chartId: 4504,\n                    data: bedEnd,\n                    display: true,\n                    color: '#3fa6e9'\n                }\n            };\n\n            var finishDate = moment(new Date(), 'DD.MM').subtract(1, \"days\");\n            var startDate = moment(new Date(), 'DD.MM').subtract(30, \"days\");\n\n            var strainData = [];\n\n            for (let i = 0; i < 30; i++) {\n                var dayData = {\n                    date: charts.users.data[i].x,\n                    users: charts.users.data[i].y,\n                    visits: charts.visits.data[i].y,\n                    views: charts.views.data[i].y,\n                }\n\n                strainData.push(dayData);\n            }\n\n            this.setState({\n                charts: charts,\n                defaultChart: defaultChart,\n                strainData: strainData,\n                startDate: startDate.format('DD.MM'),\n                finishDate: finishDate.format('DD.MM'),\n                loading: true\n            });\n\n        }).catch(function(logs) {\n            console.log('error ' + logs);\n        })\n    }\n\n    getGoodBeginData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var goodBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].beginTime).isAfter(visits[j].startTime, 'minute'))) {\n                    goodBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: goodBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getBedBeginData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var bedBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                console.log(visits[j].startTime.slice(0, 10));\n                console.log(startDate.format('DD.MM.YYYY'));\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].beginTime).isBefore(visits[j].startTime, 'minute'))) {\n                    bedBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: bedBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getGoodEndData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var goodBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].endTime).isAfter(visits[j].finishTime, 'minute'))) {\n                    goodBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: goodBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getBedEndData(visits) {\n        var currentlyDate = moment(new Date(), 'DD.MM.YYYY');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var monthData = [];\n\n        for (let i = 30; i > 0; i--) {\n            var goodBeginsOnDay = 0;\n            for (let j = 0; j < visits.length; j++) {\n                if ((visits[j].startTime.slice(0, 10) === startDate.format('DD.MM.YYYY')) && (moment(visits[j].endTime).isBefore(visits[j].finishTime, 'minute'))) {\n                    goodBeginsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: startDate.format('DD.MM'),\n                y: goodBeginsOnDay\n            };\n\n            startDate = startDate.add(1, \"days\");\n            monthData.push(oneDayValue);\n        }\n\n        return monthData;\n    }\n\n    getDefaultChart() {\n        var currentlyDate = moment(new Date(), 'DD.MM');\n        var startDate = currentlyDate.subtract(30, \"days\");\n        var defaultDays = [];\n\n        for (let i = 30; i > 0; i--) {\n\n            var oneDay = {\n                x: startDate.format('DD.MM'),\n                y: 0\n            };\n\n            startDate = startDate.add(1, \"days\");\n            defaultDays.push(oneDay);\n        }\n\n        return defaultDays;\n    }\n\n    render() {\n        return (\n            <div id=\"maskComponent\">\n                {!this.state.loading ? <Loader /> : null}\n                <div className=\"sidebar\" id=\"sidebar\">\n                    <Navigation activeItem={7717} />\n                </div>\n                <div className=\"panel\" id=\"panel\">\n                    <ModeWorkspace\n                        charts={this.state.charts}\n                        defaultChart={this.state.defaultChart}\n                        strainData={this.state.strainData}\n                        startDate={this.state.startDate}\n                        finishDate={this.state.finishDate}\n                    />\n                </div>                        \n            </div>\n        );\n    }\n}\n\nexport default Mode;\n\n"]},"metadata":{},"sourceType":"module"}