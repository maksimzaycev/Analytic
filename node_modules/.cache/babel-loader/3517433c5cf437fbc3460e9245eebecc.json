{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.reports.chart.js\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport '../css/main.css';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalBarSeries } from 'react-vis';\n\nvar ReportsChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportsChart, _React$Component);\n\n  function ReportsChart(props) {\n    var _this;\n\n    _classCallCheck(this, ReportsChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportsChart).call(this, props));\n    _this.state = {\n      charts: props.chartReports\n    };\n    return _this;\n  }\n\n  _createClass(ReportsChart, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        charts: nextProps.chartReports\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var reports = this.state.charts;\n      var viewed = 0;\n\n      for (var i = 0; i < reports.length; i++) {\n        if (reports[i].display) {\n          viewed++;\n        }\n      }\n\n      var widthChart = Math.round(document.body.clientWidth * 0.80);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        xType: \"ordinal\",\n        width: widthChart,\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        tickLabelAngle: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), viewed > 0 ? this.state.charts.map(function (report, i) {\n        return report.display ? React.createElement(VerticalBarSeries, {\n          data: report.monthData,\n          color: report.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }) : null;\n      }) : React.createElement(VerticalBarSeries, {\n        data: this.props.defaultChart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ReportsChart;\n}(React.Component);\n\nexport default ReportsChart;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.reports.chart.js"],"names":["React","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","VerticalBarSeries","ReportsChart","props","state","charts","chartReports","nextProps","setState","reports","viewed","i","length","display","widthChart","Math","round","document","body","clientWidth","map","report","monthData","color","defaultChart","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,OAAO,iBAAP;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,KAHJ,EAIIC,mBAJJ,EAKIC,iBALJ,EAMIC,iBANJ,QAOO,WAPP;;IASMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEF,KAAK,CAACG;AADL,KAAb;AAHe;AAMlB;;;;8CAEyBC,S,EAAW;AACjC,WAAKC,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAEE,SAAS,CAACD;AADR,OAAd;AAGH;;;6BAEQ;AAGL,UAAIG,OAAO,GAAG,KAAKL,KAAL,CAAWC,MAAzB;AACA,UAAIK,MAAM,GAAG,CAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIF,OAAO,CAACE,CAAD,CAAP,CAAWE,OAAf,EAAwB;AACpBH,UAAAA,MAAM;AACT;AACJ;;AAED,UAAII,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4B,IAAvC,CAAjB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,KAAK,EAAEL,UAA/B;AAA2C,QAAA,MAAM,EAAE,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,cAAc,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKSJ,MAAM,GAAG,CAAV,GACA,KAAKN,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsB,UAACC,MAAD,EAASV,CAAT;AAAA,eAClBU,MAAM,CAACR,OAAP,GACA,oBAAC,iBAAD;AACI,UAAA,IAAI,EAAEQ,MAAM,CAACC,SADjB;AAEI,UAAA,KAAK,EAAED,MAAM,CAACE,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,GAIK,IALa;AAAA,OAAtB,CADA,GAQA,oBAAC,iBAAD;AACI,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWqB,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbR,CADJ,CADJ;AAsBH;;;;EAlDsB7B,KAAK,CAAC8B,S;;AAqDjC,eAAevB,YAAf","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport '../css/main.css';\nimport {\n    XYPlot,\n    XAxis,\n    YAxis,\n    HorizontalGridLines,\n    VerticalGridLines,\n    VerticalBarSeries\n} from 'react-vis';\n\nclass ReportsChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            charts: props.chartReports\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            charts: nextProps.chartReports\n        });\n    }\n\n    render() {\n        \n\n        var reports = this.state.charts;\n        var viewed = 0;\n\n        for (let i = 0; i < reports.length; i++) {\n            if (reports[i].display) {\n                viewed++;\n            }\n        }\n\n        var widthChart = Math.round(document.body.clientWidth * 0.80);\n        return (\n            <div>              \n                <XYPlot xType=\"ordinal\" width={widthChart} height={300}>\n                    <HorizontalGridLines/>\n                    <VerticalGridLines />\n                    <XAxis tickLabelAngle={0} />\n                    <YAxis />\n                    {   (viewed > 0) ? \n                        this.state.charts.map((report, i) => (\n                            report.display ?\n                            <VerticalBarSeries\n                                data={report.monthData}\n                                color={report.color}\n                            /> : null\n                        )) :\n                        <VerticalBarSeries\n                            data={this.props.defaultChart}\n                        />\n                    }\n                </XYPlot>\n            </div>\n        );\n    }\n}\n\nexport default ReportsChart;\n"]},"metadata":{},"sourceType":"module"}