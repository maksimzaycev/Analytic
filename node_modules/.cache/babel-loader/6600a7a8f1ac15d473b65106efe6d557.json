{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.month.js\";\nimport React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport MonthWorkspace from './React.month.workspace';\nimport '../css/main.css';\nvar urlLogs = 'http://localhost:3000/logs';\n\nvar Month =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Month, _React$Component);\n\n  function Month(props) {\n    var _this;\n\n    _classCallCheck(this, Month);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Month).call(this, props));\n\n    _this.setPeriod = function (changedPeriod) {\n      _this.setState({\n        loading: false\n      });\n\n      _this.loadData(changedPeriod);\n    };\n\n    _this.state = {\n      charts: {},\n      defaultChart: [],\n      strainData: [],\n      settingPeriod: moment(new Date()).format('MM.YYYY'),\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Month, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData(this.state.settingPeriod);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData(period) {\n      var _this2 = this;\n\n      console.log(\"Загружаемый период:\");\n      console.log(period);\n      fetch(urlLogs + '?period=' + period).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        return _this2.parseData(result, period);\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(usersLogs, period) {\n      console.log('Результат загрузки:');\n      console.log(usersLogs);\n      var startDate = moment('01.' + period, 'DD.MM.YYYY');\n      var usersChart = this.sortUsersChart(usersLogs, startDate);\n      var visitsChart = this.sortVisitsChart(usersLogs, startDate);\n      var viewsChart = this.sortViewsChart(usersLogs, startDate);\n      var defaultChart = this.getDefaultChart(startDate);\n      var charts = {\n        users: {\n          chartId: 4501,\n          data: usersChart,\n          display: true,\n          color: '#84c9f6'\n        },\n        visits: {\n          chartId: 4502,\n          data: visitsChart,\n          display: true,\n          color: '#3fa6e9'\n        },\n        views: {\n          chartId: 4503,\n          data: viewsChart,\n          display: true,\n          color: '#127bbf'\n        }\n      };\n      var strainData = [];\n\n      for (var i = 0; i < 30; i++) {\n        var dayData = {\n          date: charts.users.data[i].x,\n          users: charts.users.data[i].y,\n          visits: charts.visits.data[i].y,\n          views: charts.views.data[i].y\n        };\n        strainData.push(dayData);\n      }\n\n      this.setState({\n        charts: charts,\n        defaultChart: defaultChart,\n        strainData: strainData,\n        loading: true\n      });\n    }\n  }, {\n    key: \"sortVisitsChart\",\n    value: function sortVisitsChart(userLogs, startDate) {\n      console.log('ХУЙ');\n      console.log(startDate);\n      var start = startDate;\n      console.log('СТАРТ');\n      console.log(start);\n      var sortVisits = [];\n\n      for (var i = 30; i > 0; i--) {\n        var visitsOnDay = 0;\n\n        for (var j = 0; j < userLogs.length; j++) {\n          if (userLogs[j].date.slice(0, 5) === start.format('DD.MM')) {\n            visitsOnDay++;\n          }\n        }\n\n        var oneDayValue = {\n          x: start.format('DD.MM'),\n          y: visitsOnDay\n        };\n        start = start.add(1, \"days\");\n        sortVisits.push(oneDayValue);\n      }\n\n      return sortVisits;\n    }\n  }, {\n    key: \"sortViewsChart\",\n    value: function sortViewsChart(userLogs, startDate) {\n      console.log('ХУЙ');\n      console.log(startDate);\n      var start = startDate;\n      console.log('СТАРТ');\n      console.log(start);\n      var sortViews = [];\n\n      for (var i = 30; i > 0; i--) {\n        var viewsOnDay = 0;\n\n        for (var j = 0; j < userLogs.length; j++) {\n          if (userLogs[j].date.slice(0, 5) === start.format('DD.MM')) {\n            viewsOnDay = viewsOnDay + userLogs[j].pages;\n          }\n        }\n\n        var oneDayValue = {\n          x: start.format('DD.MM'),\n          y: viewsOnDay\n        };\n        start = start.add(1, \"days\");\n        sortViews.push(oneDayValue);\n      }\n\n      return sortViews;\n    }\n  }, {\n    key: \"sortUsersChart\",\n    value: function sortUsersChart(userLogs, startDate) {\n      console.log('ХУЙ');\n      console.log(startDate);\n      var start = startDate;\n      console.log('СТАРТ');\n      console.log(start);\n      var sortUsers = [];\n\n      for (var i = 30; i > 0; i--) {\n        var uniqueUsers = [];\n\n        for (var j = 0; j < userLogs.length; j++) {\n          if (userLogs[j].date.slice(0, 5) === start.format('DD.MM') && !uniqueUsers.includes(userLogs[j].userId)) {\n            uniqueUsers.push(userLogs[j].userId);\n          }\n        }\n\n        var oneDay = {\n          x: start.format('DD.MM'),\n          y: uniqueUsers.length\n        };\n        start = start.add(1, \"days\");\n        sortUsers.push(oneDay);\n      }\n\n      return sortUsers;\n    }\n  }, {\n    key: \"getDefaultChart\",\n    value: function getDefaultChart(startDate) {\n      var currentlyDate = startDate;\n      var start = currentlyDate.subtract(30, \"days\");\n      var defaultDays = [];\n\n      for (var i = 30; i > 0; i--) {\n        var oneDay = {\n          x: start.format('DD.MM'),\n          y: 0\n        };\n        start = start.add(1, \"days\");\n        defaultDays.push(oneDay);\n      }\n\n      return defaultDays;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"maskComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, !this.state.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"sidebar\",\n        id: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        activeItem: 7717,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel\",\n        id: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(MonthWorkspace, {\n        charts: this.state.charts,\n        defaultChart: this.state.defaultChart,\n        strainData: this.state.strainData,\n        setPeriod: this.setPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Month;\n}(React.Component);\n\nexport default Month;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.month.js"],"names":["React","dataLoad","Navigation","Loader","moment","MonthWorkspace","urlLogs","Month","props","setPeriod","changedPeriod","setState","loading","loadData","state","charts","defaultChart","strainData","settingPeriod","Date","format","period","console","log","fetch","then","response","json","result","parseData","catch","e","usersLogs","startDate","usersChart","sortUsersChart","visitsChart","sortVisitsChart","viewsChart","sortViewsChart","getDefaultChart","users","chartId","data","display","color","visits","views","i","dayData","date","x","y","push","userLogs","start","sortVisits","visitsOnDay","j","length","slice","oneDayValue","add","sortViews","viewsOnDay","pages","sortUsers","uniqueUsers","includes","userId","oneDay","currentlyDate","subtract","defaultDays","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment'\nimport MonthWorkspace from './React.month.workspace';\nimport '../css/main.css';\n\nconst urlLogs = 'http://localhost:3000/logs';\n\nclass Month extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            charts: {},\n            defaultChart: [],\n            strainData: [],\n            settingPeriod: moment(new Date()).format('MM.YYYY'),\n            loading: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadData(this.state.settingPeriod);\n    }\n\n    loadData(period) {\n        console.log(\"Загружаемый период:\");\n        console.log(period);\n        fetch(urlLogs + '?period=' + period)\n            .then(function(response) {\n                return response.json();\n            })\n            .then(result => this.parseData(result, period))\n            .catch(e => console.log(e));\n    }\n\n    parseData(usersLogs, period) {\n        console.log('Результат загрузки:');\n        console.log(usersLogs);\n        \n        var startDate = moment('01.' + period, 'DD.MM.YYYY');\n\n        var usersChart = this.sortUsersChart(usersLogs, startDate);\n        var visitsChart = this.sortVisitsChart(usersLogs, startDate);\n        var viewsChart = this.sortViewsChart(usersLogs, startDate);\n        var defaultChart = this.getDefaultChart(startDate);\n\n        var charts = {\n            users: {\n                chartId: 4501,\n                data: usersChart,\n                display: true,\n                color: '#84c9f6'\n            },\n            visits: {\n                chartId: 4502,\n                data: visitsChart,\n                display: true,\n                color: '#3fa6e9'\n            },\n            views: {\n                chartId: 4503,\n                data: viewsChart,\n                display: true,\n                color: '#127bbf'\n            }\n        };\n\n        var strainData = [];\n\n        for (let i = 0; i < 30; i++) {\n            var dayData = {\n                date: charts.users.data[i].x,\n                users: charts.users.data[i].y,\n                visits: charts.visits.data[i].y,\n                views: charts.views.data[i].y,\n            }\n\n            strainData.push(dayData);\n        }\n\n        this.setState({\n            charts: charts,\n            defaultChart: defaultChart,\n            strainData: strainData,\n            loading: true\n        });   \n    }\n\n    setPeriod = (changedPeriod) => {\n        this.setState({\n            loading: false\n        });\n\n        this.loadData(changedPeriod);\n    }\n\n    sortVisitsChart(userLogs, startDate) {\n        console.log('ХУЙ');\n        console.log(startDate);\n        \n        var start = startDate;\n\n        console.log('СТАРТ');\n        console.log(start);\n        var sortVisits = [];\n\n        for (let i = 30; i > 0; i--) {\n            var visitsOnDay = 0;\n            for (let j = 0; j < userLogs.length; j++) {\n                if (userLogs[j].date.slice(0, 5) === start.format('DD.MM')) {\n                    visitsOnDay++;\n                }\n            }\n\n            var oneDayValue = {\n                x: start.format('DD.MM'),\n                y: visitsOnDay\n            };\n\n            start = start.add(1, \"days\");\n            sortVisits.push(oneDayValue);\n        }\n\n        return sortVisits;\n    }\n\n    sortViewsChart(userLogs, startDate) {\n        console.log('ХУЙ');\n        console.log(startDate);\n        \n        var start = startDate;\n        console.log('СТАРТ');\n        console.log(start);\n        var sortViews = [];\n\n        for (let i = 30; i > 0; i--) {\n            var viewsOnDay = 0;\n            for (let j = 0; j < userLogs.length; j++) {\n                if (userLogs[j].date.slice(0, 5) === start.format('DD.MM')) {\n                    viewsOnDay = viewsOnDay + userLogs[j].pages;\n                }\n            }\n\n            var oneDayValue = {\n                x: start.format('DD.MM'),\n                y: viewsOnDay\n            };\n\n            start = start.add(1, \"days\");\n            sortViews.push(oneDayValue);\n        }\n\n        return sortViews;\n    }\n\n    sortUsersChart(userLogs, startDate) {\n        console.log('ХУЙ');\n        console.log(startDate);\n        let start = startDate;\n        console.log('СТАРТ');\n        console.log(start);\n        let sortUsers = [];\n\n        for (let i = 30; i > 0; i--) {\n            var uniqueUsers = [];\n            \n            for (let j = 0; j < userLogs.length; j++) {\n                if ((userLogs[j].date.slice(0, 5) === start.format('DD.MM')) && (!uniqueUsers.includes(userLogs[j].userId))){\n                    uniqueUsers.push(userLogs[j].userId);\n                }\n            }\n\n            var oneDay = {\n                x: start.format('DD.MM'),\n                y: uniqueUsers.length\n            };\n\n            start = start.add(1, \"days\");\n            sortUsers.push(oneDay);\n        }\n\n        return sortUsers;\n    }\n\n    getDefaultChart(startDate) {\n        var currentlyDate = startDate;\n        var start = currentlyDate.subtract(30, \"days\");\n        var defaultDays = [];\n\n        for (let i = 30; i > 0; i--) {\n\n            var oneDay = {\n                x: start.format('DD.MM'),\n                y: 0\n            };\n\n            start = start.add(1, \"days\");\n            defaultDays.push(oneDay);\n        }\n\n        return defaultDays;\n    }\n\n    render() {\n        return (\n            <div id=\"maskComponent\">\n                {!this.state.loading ? <Loader /> : null}\n                <div className=\"sidebar\" id=\"sidebar\">\n                    <Navigation activeItem={7717} />\n                </div>\n                <div className=\"panel\" id=\"panel\">\n                    <MonthWorkspace\n                        charts={this.state.charts}\n                        defaultChart={this.state.defaultChart}\n                        strainData={this.state.strainData}\n                        setPeriod={this.setPeriod}\n                    />\n                </div>                        \n            </div>\n        );\n    }\n}\n\nexport default Month;\n\n"]},"metadata":{},"sourceType":"module"}