{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.users.table.js\";\nimport React from 'react';\nimport UsersRowTable from './React.users.table.row';\nimport UsersRowNull from './React.users.table.rowNull';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort as fasSort } from '@fortawesome/free-solid-svg-icons';\nimport '../css/main.css';\n\nvar UsersTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersTable, _React$Component);\n\n  function UsersTable(props) {\n    var _this;\n\n    _classCallCheck(this, UsersTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsersTable).call(this, props));\n\n    _this.sortById = function () {\n      var toggleSort = _this.state.waySortId;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.id - b.id;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortId: toggleSort\n      });\n    };\n\n    _this.sortByName = function () {\n      var toggleSort = _this.state.waySortName;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var nameA = a.name.toLowerCase();\n        var nameB = b.name.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortName: toggleSort\n      });\n    };\n\n    _this.sortByDays = function () {\n      var toggleSort = _this.state.waySortDays;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.days - b.days;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortDays: toggleSort\n      });\n    };\n\n    _this.sortByCompany = function () {\n      var toggleSort = _this.state.waySortCompany;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var companyA = a.company.toLowerCase();\n        var companyB = b.company.toLowerCase();\n        if (companyA < companyB) return -1;\n        if (companyA > companyB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortCompany: toggleSort\n      });\n    };\n\n    _this.sortByUnit = function () {\n      var toggleSort = _this.state.waySortUnit;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var companyA = a.unit.toLowerCase();\n        var companyB = b.unit.toLowerCase();\n        if (companyA < companyB) return -1;\n        if (companyA > companyB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortUnit: toggleSort\n      });\n    };\n\n    _this.sortByFinishDate = function () {\n      var toggleSort = _this.state.waySortFinishDate;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.finishDate, 'DD.MM.YY');\n        var dateB = moment(a.finishDate, 'DD.MM.YY');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortFinishDate: toggleSort\n      });\n    };\n\n    _this.sortByLastDate = function () {\n      var toggleSort = _this.state.waySortLastDate;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.lastDate, 'DD.MM.YY');\n        var dateB = moment(a.lastDate, 'DD.MM.YY');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortLastDate: toggleSort\n      });\n    };\n\n    _this.state = {\n      rows: _this.props.rows,\n      waySortId: false,\n      waySortName: false,\n      waySortCompany: false,\n      waySortUnit: false,\n      waySortFinishDate: false\n    };\n    return _this;\n  }\n\n  _createClass(UsersTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('ПРОВЕРКА PROPS.USERS В TABLE');\n      console.log(this.props.users);\n      return React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"table__row table__row--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"table__cell table__cell--head table__cell--statistics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        className: \"table__cell table__cell--body table__cell--name left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), \" \", \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--body table__cell--company left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), \" \", \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--body table__cell--unit left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByUnit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), \" \", \"\\u041E\\u0442\\u0434\\u0435\\u043B\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--body table__cell--finishDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByFinishDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), \" \", \"\\u041E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--body table__cell--days\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByDays,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), \" \", \"\\u0414\\u043D\\u0435\\u0439\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--body table__cell--action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, this.state.rows.length !== 0 ? this.state.rows.map(function (row) {\n        return React.createElement(UsersRowTable, {\n          key: row.id,\n          id: row.id,\n          name: row.name,\n          company: row.company,\n          unit: row.unit,\n          status: row.status,\n          days: row.days,\n          finishDate: row.finishDate,\n          update: _this2.props.update,\n          remove: _this2.props.remove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        });\n      }) : React.createElement(UsersRowNull, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UsersTable;\n}(React.Component);\n\nexport default UsersTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.users.table.js"],"names":["React","UsersRowTable","UsersRowNull","moment","FontAwesomeIcon","faSort","fasSort","UsersTable","props","sortById","toggleSort","state","waySortId","sortRows","rows","sort","a","b","id","reverse","setState","sortByName","waySortName","nameA","name","toLowerCase","nameB","sortByDays","waySortDays","days","sortByCompany","waySortCompany","companyA","company","companyB","sortByUnit","waySortUnit","unit","sortByFinishDate","waySortFinishDate","dateA","finishDate","dateB","sortByLastDate","waySortLastDate","lastDate","nextProps","console","log","users","length","map","row","status","update","remove","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UsersRowTable from './React.users.table.row';\nimport UsersRowNull from './React.users.table.rowNull';\nimport moment from 'moment'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort as fasSort} from '@fortawesome/free-solid-svg-icons'\nimport '../css/main.css';\n\nclass UsersTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: this.props.rows,\n            waySortId: false,\n            waySortName: false,\n            waySortCompany: false,\n            waySortUnit: false,\n            waySortFinishDate: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            rows: nextProps.rows\n        });\n    }\n\n    sortById = () => {\n        var toggleSort = this.state.waySortId;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.id - b.id\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortId: toggleSort\n        });\n    };\n\n    sortByName = () => {\n        var toggleSort = this.state.waySortName;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var nameA = a.name.toLowerCase();\n            var nameB = b.name.toLowerCase();\n            if (nameA < nameB)\n                return -1\n            if (nameA > nameB)\n                return 1\n            return 0\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortName: toggleSort\n        });\n    };\n\n    sortByDays = () => {\n        var toggleSort = this.state.waySortDays;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.days - b.days\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortDays: toggleSort\n        });\n    };\n\n    sortByCompany = () => {\n        var toggleSort = this.state.waySortCompany;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var companyA = a.company.toLowerCase();\n            var companyB = b.company.toLowerCase();\n            if (companyA < companyB)\n                return -1\n            if (companyA > companyB)\n                return 1\n            return 0\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortCompany: toggleSort\n        });\n    };\n\n    sortByUnit = () => {\n        var toggleSort = this.state.waySortUnit;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var companyA = a.unit.toLowerCase();\n            var companyB = b.unit.toLowerCase();\n            if (companyA < companyB)\n                return -1\n            if (companyA > companyB)\n                return 1\n            return 0\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortUnit: toggleSort\n        });\n    };\n\n    sortByFinishDate = () => {\n        let toggleSort = this.state.waySortFinishDate;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.finishDate, 'DD.MM.YY');\n            let dateB = moment(a.finishDate, 'DD.MM.YY');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortFinishDate: toggleSort\n        });\n    };\n\n    sortByLastDate = () => {\n        let toggleSort = this.state.waySortLastDate;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.lastDate, 'DD.MM.YY');\n            let dateB = moment(a.lastDate, 'DD.MM.YY');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortLastDate: toggleSort\n        });\n    };\n\n    render() {\n        console.log('ПРОВЕРКА PROPS.USERS В TABLE');\n        console.log(this.props.users);\n        return (\n            <table className=\"table\">\n                <thead>\n                    <tr className=\"table__row table__row--head\">\n                        <td className=\"table__cell table__cell--head table__cell--statistics\"></td>\n                        <td className=\"table__cell table__cell--body table__cell--name left\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByName} />{\" \"}Имя пользователя</td>\n                        <td className=\"table__cell table__cell--body table__cell--company left\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByCompany} />{\" \"}Компания</td>\n                        <td className=\"table__cell table__cell--body table__cell--unit left\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByUnit} />{\" \"}Отдел</td>\n                        <td className=\"table__cell table__cell--body table__cell--finishDate\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByFinishDate} />{\" \"}Окончание пароля</td>\n                        <td className=\"table__cell table__cell--body table__cell--days\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByDays} />{\" \"}Дней</td>\n                        <td className=\"table__cell table__cell--body table__cell--action\"></td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    (this.state.rows.length !== 0) ? (\n                    this.state.rows.map(row => (\n                        <UsersRowTable\n                            key={row.id}\n                            id={row.id}\n                            name={row.name}\n                            company={row.company}\n                            unit={row.unit}\n                            status={row.status}\n                            days={row.days}\n                            finishDate={row.finishDate}\n                            update={this.props.update}\n                            remove={this.props.remove}\n                        /> )\n                    )) : <UsersRowNull />\n                }\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default UsersTable;"]},"metadata":{},"sourceType":"module"}