{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.day.js\";\nimport React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport DayWorkspace from './React.day.workspace';\nimport '../css/main.css';\n\nvar Day =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Day, _React$Component);\n\n  function Day(props) {\n    var _this;\n\n    _classCallCheck(this, Day);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Day).call(this, props));\n\n    _this.setDate = function (changedDate) {\n      var formatedDare = moment(changedDate, 'YYYY-MM-DD').format('DD.MM.YYYY');\n\n      _this.setState({\n        settingDate: formatedDare\n      });\n    };\n\n    _this.state = {\n      chartDay: [],\n      tableDay: [],\n      settingDate: moment(new Date()).format('DD.MM.YYYY'),\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Day, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      var urlLogs = 'http://localhost:3000/logs';\n      var usersLogs;\n      dataLoad(urlLogs).then(function (logs) {\n        usersLogs = JSON.parse(logs);\n\n        var chartHours = _this2.sortHoursChart(usersLogs);\n\n        var tableHours = _this2.sortHoursTable(usersLogs);\n\n        console.log(chartHours);\n\n        _this2.setState({\n          chartDay: chartHours,\n          tableDay: tableHours,\n          loading: true\n        });\n      }).catch(function (logs) {\n        console.log('error ' + logs);\n      });\n    }\n  }, {\n    key: \"sortHoursChart\",\n    value: function sortHoursChart(userLogs) {\n      var dayData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var hourData = {\n          x: startHour.format('HH:mm'),\n          y: 0\n        };\n\n        for (var j = 0; j < userLogs.length; j++) {\n          var visitTime = moment(userLogs[j].time.slice(6, 11), 'HH:mm');\n\n          if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n            hourData.y++;\n          }\n        }\n\n        dayData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return dayData;\n    }\n  }, {\n    key: \"sortHoursTable\",\n    value: function sortHoursTable(userLogs) {\n      var dayData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var hourData = {\n          start: startHour.format('HH:mm'),\n          finish: finishHour.format('HH:mm'),\n          visits: 0\n        };\n\n        for (var j = 0; j < userLogs.length; j++) {\n          var visitTime = moment(userLogs[j].time.slice(6, 11), 'HH:mm');\n\n          if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n            hourData.visits++;\n          }\n        }\n\n        dayData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return dayData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('Текущая дата: ');\n      console.log(this.state.settingDate);\n      return React.createElement(\"div\", {\n        id: \"maskComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, !this.state.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"sidebar\",\n        id: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        activeItem: 7711,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel\",\n        id: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(DayWorkspace, {\n        chartDay: this.state.chartDay,\n        tableDay: this.state.tableDay,\n        setDate: this.setDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Day;\n}(React.Component);\n\nexport default Day;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.day.js"],"names":["React","dataLoad","Navigation","Loader","moment","DayWorkspace","Day","props","setDate","changedDate","formatedDare","format","setState","settingDate","state","chartDay","tableDay","Date","loading","loadData","urlLogs","usersLogs","then","logs","JSON","parse","chartHours","sortHoursChart","tableHours","sortHoursTable","console","log","catch","userLogs","dayData","startHour","finishHour","i","hourData","x","y","j","length","visitTime","time","slice","isBetween","push","add","start","finish","visits","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dataLoad from '../models/dataLoad';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment'\nimport DayWorkspace from './React.day.workspace';\nimport '../css/main.css';\n\nclass Day extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartDay: [],\n            tableDay: [],\n            settingDate: moment(new Date()).format('DD.MM.YYYY'), \n            loading: false\n        };\n    }\n\n    componentWillMount() {\n        this.loadData();\n    }\n\n    setDate = (changedDate) => {\n        var formatedDare = moment(changedDate, 'YYYY-MM-DD').format('DD.MM.YYYY');\n        this.setState({\n            settingDate: formatedDare\n        });\n    }\n\n    loadData() {\n        var urlLogs = 'http://localhost:3000/logs';\n\n        var usersLogs;\n\n        dataLoad(urlLogs).then(logs => {\n            usersLogs = JSON.parse(logs);\n            var chartHours = this.sortHoursChart(usersLogs);\n            var tableHours = this.sortHoursTable(usersLogs);\n\n            console.log(chartHours);\n\n            this.setState({\n                chartDay: chartHours,\n                tableDay: tableHours,\n                loading: true\n            });\n\n        }).catch(function(logs) {\n            console.log('error ' + logs);\n        })\n    }\n\n    sortHoursChart(userLogs) {\n        var dayData = [];\n\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            var hourData = {\n                x: startHour.format('HH:mm'),\n                y: 0\n            }\n\n            for (let j = 0; j < userLogs.length; j++) {\n                var visitTime = moment(userLogs[j].time.slice(6,11), 'HH:mm');\n                if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n                    hourData.y++;\n                }\n            }\n\n            dayData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return dayData;\n    }\n\n    sortHoursTable(userLogs) {\n        var dayData = [];\n\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            var hourData = {\n                start: startHour.format('HH:mm'),\n                finish: finishHour.format('HH:mm'),\n                visits: 0\n            }\n\n            for (let j = 0; j < userLogs.length; j++) {\n                var visitTime = moment(userLogs[j].time.slice(6,11), 'HH:mm');\n                if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n                    hourData.visits++;\n                }\n            }\n\n            dayData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return dayData;\n    }\n\n    render() {\n        console.log('Текущая дата: ');\n        console.log(this.state.settingDate);\n        return (\n            <div id=\"maskComponent\">\n                {!this.state.loading ? <Loader /> : null}\n                <div className=\"sidebar\" id=\"sidebar\">\n                    <Navigation activeItem={7711} />\n                </div>\n                <div className=\"panel\" id=\"panel\">\n                    <DayWorkspace\n                        chartDay={this.state.chartDay}\n                        tableDay={this.state.tableDay}\n                        setDate={this.setDate}\n                    />\n                </div>                        \n            </div>\n        );\n    }\n}\n\nexport default Day;\n\n"]},"metadata":{},"sourceType":"module"}