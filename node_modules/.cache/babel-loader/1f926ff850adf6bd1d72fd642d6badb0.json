{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.mode.table.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort as fasSort } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport ModeRowTable from './React.mode.table.row';\nimport '../css/main.css';\n\nvar ModeTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModeTable, _React$Component);\n\n  function ModeTable(props) {\n    var _this;\n\n    _classCallCheck(this, ModeTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModeTable).call(this, props));\n\n    _this.sortByDate = function () {\n      var toggleSort = _this.state.waySortDate;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.date, 'DD.MM');\n        var dateB = moment(a.date, 'DD.MM');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortDate: toggleSort\n      });\n    };\n\n    _this.sortByUsers = function () {\n      var toggleSort = _this.state.waySortUsers;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.users - b.users;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortUsers: toggleSort\n      });\n    };\n\n    _this.sortByVisits = function () {\n      var toggleSort = _this.state.waySortVisits;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.visits - b.visits;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortVisits: toggleSort\n      });\n    };\n\n    _this.sortByViews = function () {\n      var toggleSort = _this.state.waySortConversions;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.views - b.views;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortViews: toggleSort\n      });\n    };\n\n    _this.state = {\n      rows: _this.props.rows,\n      waySortDate: true,\n      waySortUser: false,\n      waySortVisits: false,\n      waySortViews: false\n    };\n    return _this;\n  }\n\n  _createClass(ModeTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        className: \"mode__table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"mode__row mode__row--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"mode__cell mode__cell--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), \" \\u0414\\u0430\\u0442\\u0430\"), React.createElement(\"td\", {\n        className: \"mode__cell mode__cell--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), \" \\u041F\\u0440\\u0438\\u0448\\u043B\\u043E \\u0432\\u043E \\u0432\\u0440\\u0435\\u043C\\u044F \"), React.createElement(\"td\", {\n        className: \"mode__cell mode__cell--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByVisits,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), \" \\u041E\\u043F\\u0430\\u0437\\u0434\\u0430\\u043B\\u043E\"), React.createElement(\"td\", {\n        className: \"mode__cell mode__cell--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByViews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), \" \\u0423\\u0448\\u043B\\u043E \\u0440\\u0430\\u043D\\u044C\\u0448\\u0435\"), React.createElement(\"td\", {\n        className: \"mode__cell mode__cell--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByViews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), \" \\u0423\\u0448\\u043B\\u043E \\u0432\\u043E \\u0432\\u0440\\u0435\\u043C\\u044F\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.rows.map(function (row, i) {\n        return React.createElement(ModeRowTable, {\n          key: i,\n          index: i,\n          id: row.id,\n          date: row.date,\n          goodBegin: row.goodBegin,\n          bedBegin: row.bedBegin,\n          goodEnd: row.goodEnd,\n          bedEnd: row.bedEnd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return ModeTable;\n}(React.Component);\n\nexport default ModeTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.mode.table.js"],"names":["React","FontAwesomeIcon","faSort","fasSort","moment","ModeRowTable","ModeTable","props","sortByDate","toggleSort","state","waySortDate","sortRows","rows","sort","a","b","dateA","date","dateB","reverse","setState","sortByUsers","waySortUsers","users","sortByVisits","waySortVisits","visits","sortByViews","waySortConversions","views","waySortViews","waySortUser","nextProps","map","row","i","id","goodBegin","bedBegin","goodEnd","bedEnd","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort as fasSort} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport ModeRowTable from './React.mode.table.row';\nimport '../css/main.css';\n\nclass ModeTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: this.props.rows,\n            waySortDate: true,\n            waySortUser: false,\n            waySortVisits: false,\n            waySortViews: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            rows: nextProps.rows\n        });\n    }\n\n    sortByDate = () => {\n        let toggleSort = this.state.waySortDate;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.date, 'DD.MM');\n            let dateB = moment(a.date, 'DD.MM');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortDate: toggleSort\n        });\n    };\n\n    sortByUsers = () => {\n        var toggleSort = this.state.waySortUsers;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.users - b.users\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortUsers: toggleSort\n        });\n    };\n\n    sortByVisits = () => {\n        var toggleSort = this.state.waySortVisits;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.visits - b.visits\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortVisits: toggleSort\n        });\n    };\n\n    sortByViews = () => {\n        var toggleSort = this.state.waySortConversions;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.views - b.views\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortViews: toggleSort\n        });\n    };\n\n    render() {\n        return (\n            <table className=\"mode__table\">\n                <thead>\n                    <tr className=\"mode__row mode__row--head\">\n                        <td className=\"mode__cell mode__cell--head\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByDate} /> Дата</td>\n                        <td className=\"mode__cell mode__cell--head\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByUsers} /> Пришло во время </td>\n                        <td className=\"mode__cell mode__cell--head\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByVisits} /> Опаздало</td>\n                        <td className=\"mode__cell mode__cell--head\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByViews} /> Ушло раньше</td>\n                        <td className=\"mode__cell mode__cell--head\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByViews} /> Ушло во время</td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    this.state.rows.map((row, i) => (\n                        <ModeRowTable\n                            key={i}\n                            index={i}\n                            id={row.id}\n                            date={row.date}\n                            goodBegin={row.goodBegin}\n                            bedBegin={row.bedBegin}\n                            goodEnd={row.goodEnd}\n                            bedEnd={row.bedEnd}\n                        /> )\n                    )\n                }\n                </tbody>\n\n            </table>\n        );\n    }\n\n}\n\nexport default ModeTable;\n"]},"metadata":{},"sourceType":"module"}