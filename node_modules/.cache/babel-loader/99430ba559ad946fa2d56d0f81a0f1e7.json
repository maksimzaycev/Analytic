{"ast":null,"code":"import _defineProperty from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.logs.add.js\";\nimport React from 'react';\nimport AddPageLogs from './React.logs.add.page';\nimport moment from 'moment';\nimport '../css/main.css';\n\nvar AddLogs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddLogs, _React$Component);\n\n  function AddLogs(props) {\n    var _this;\n\n    _classCallCheck(this, AddLogs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddLogs).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var name = target.name;\n\n      if (name === 'user') {\n        var value = parseInt(target.value);\n\n        _this.setState({\n          userId: parseInt(value)\n        }, _this.getUserData(value));\n      } else if (name === 'time') {\n        var _value = target.value;\n\n        _this.setState(_defineProperty({}, name, _value));\n      } else if (name === 'date') {\n        var _value2 = target.value;\n\n        _this.setState(_defineProperty({}, name, _value2), _this.setCurrentDate(_value2));\n      }\n    };\n\n    _this.addClick = function (event) {\n      var inputsValid = _this.checkInputs();\n\n      if (!inputsValid) {\n        var newVisit = {\n          id: _this.state.id,\n          userId: _this.state.userId,\n          time: _this.state.time,\n          date: _this.state.date,\n          period: _this.state.date.slice(3, 10),\n          name: _this.state.name,\n          company: _this.state.company,\n          pages: _this.state.logItems.length,\n          long: moment('00:00', 'mm:ss'),\n          logItems: _this.state.logItems\n        };\n\n        for (var i = 0; i < newVisit.logItems.length; i++) {\n          var thisPageTime = moment(newVisit.logItems[i].long, 'mm:ss');\n          var minutes = thisPageTime.format('mm');\n          var seconds = thisPageTime.format('ss');\n          newVisit.long = newVisit.long.add(seconds, 'seconds');\n          newVisit.long = newVisit.long.add(minutes, 'minutes');\n        }\n\n        newVisit.long = newVisit.long.format('mm:ss');\n\n        _this.props.add(newVisit);\n\n        _this.setState({\n          id: _this.getRandomLogId(),\n          userId: 0,\n          time: '',\n          date: '',\n          name: '',\n          company: '',\n          pages: 0,\n          long: '',\n          logItems: [{\n            id: _this.getRandomPageId(),\n            title: '',\n            link: '',\n            long: '',\n            date: ''\n          }]\n        });\n      } else {\n        event.preventDefault();\n      }\n    };\n\n    _this.getPageData = function (i, page) {\n      var logItems = _this.state.logItems;\n      logItems[i] = page;\n\n      _this.setState({\n        logItems: logItems\n      });\n    };\n\n    _this.getRandomLogId = function () {\n      var unUniqueId = true;\n      var currentLogs = _this.props.currentLogs;\n\n      do {\n        var rand = 1000 - 0.5 + Math.random() * (9999 - 1000 + 1);\n        var newId = Math.round(rand);\n        unUniqueId = false;\n\n        for (var i = 0; i < currentLogs.length; i++) {\n          if (currentLogs[i].id == newId) {\n            unUniqueId = true;\n          }\n        }\n      } while (unUniqueId);\n\n      return newId;\n    };\n\n    _this.getRandomPageId = function () {\n      var unUniqueId = true;\n      var currentLogs = _this.props.currentLogs;\n\n      do {\n        var rand = 10000 - 0.5 + Math.random() * (99999 - 1000 + 1);\n        var newId = Math.round(rand);\n        unUniqueId = false;\n\n        for (var i = 0; i < currentLogs.length; i++) {\n          for (var j = 0; j < currentLogs[i].logItems.length; j++) {\n            if (currentLogs[i].logItems[j].id == newId) {\n              unUniqueId = true;\n            }\n          }\n        }\n      } while (unUniqueId);\n\n      return newId;\n    };\n\n    _this.addNewPage = function () {\n      var logItems = _this.state.logItems;\n      var newLogItem = {\n        id: _this.getRandomPageId(),\n        title: '',\n        link: '',\n        long: '',\n        date: _this.state.time.slice(0, 5)\n      };\n      logItems.push(newLogItem);\n\n      _this.setState({\n        logItems: logItems\n      });\n    };\n\n    _this.removeNewPage = function (i) {\n      var logItems = _this.state.logItems;\n\n      if (_this.state.logItems.length > 1) {\n        logItems.splice(i, 1);\n      }\n\n      _this.setState({\n        logItems: logItems\n      });\n    };\n\n    _this.state = {\n      id: _this.getRandomLogId(),\n      userId: 'Выбрать...',\n      time: '',\n      date: '',\n      period: '',\n      name: '',\n      company: '',\n      pages: 0,\n      long: '',\n      logItems: [{\n        id: _this.getRandomPageId(),\n        title: '',\n        link: '',\n        long: '',\n        date: ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(AddLogs, [{\n    key: \"getUserData\",\n    value: function getUserData(userId) {\n      var userData = this.props.users.filter(function (el) {\n        return el.id === userId;\n      });\n      this.setState({\n        name: userData[0].name,\n        company: userData[0].company\n      });\n    }\n  }, {\n    key: \"setCurrentDate\",\n    value: function setCurrentDate(time) {\n      var logItems = this.state.logItems;\n      var currentDate = time.slice(0, 5);\n\n      for (var i = 0; i < logItems.length; i++) {\n        logItems[i].date = currentDate;\n      }\n\n      this.setState({\n        logItems: logItems\n      });\n    }\n  }, {\n    key: \"checkInputs\",\n    value: function checkInputs() {\n      var reqInputs = document.querySelectorAll('.req');\n      var error = false;\n\n      for (var i = 0; i < reqInputs.length; i++) {\n        if (reqInputs[i].value === '') {\n          reqInputs[i].classList.remove('normal-input');\n          reqInputs[i].previousSibling.classList.remove('normal-label');\n          reqInputs[i].classList.add('error-input');\n          reqInputs[i].previousSibling.classList.add('error-label');\n          error = true;\n        }\n      }\n\n      return error;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var inputs = document.querySelectorAll('.logs-add__input');\n\n      for (var i = 0; i < inputs.length; i++) {\n        inputs[i].onfocus = function () {\n          this.classList.remove('normal-input');\n          this.previousSibling.classList.remove('normal-label');\n          this.classList.remove('error-input');\n          this.previousSibling.classList.remove('error-label');\n          this.classList.add('active-input');\n          this.previousSibling.classList.add('active-label');\n        };\n      }\n\n      for (var _i = 0; _i < inputs.length; _i++) {\n        inputs[_i].onblur = function () {\n          this.classList.remove('active-input');\n          this.previousSibling.classList.remove('active-label');\n          this.classList.add('normal-input');\n          this.previousSibling.classList.add('normal-label');\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"logs__form\",\n        id: \"send__form\",\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logs__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logs__node logs-add__node--date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"logs__label\",\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u0438\\u0437\\u0438\\u0442\\u0430\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"logs__input req normal-input\",\n        value: this.state.date,\n        name: \"date\",\n        onChange: this.handleInputChange,\n        placeholder: \"30.04.2019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"logs__node logs__node--time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"logs__label\",\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u0438\\u0437\\u0438\\u0442\\u0430\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"logs__input req normal-input\",\n        value: this.state.time,\n        name: \"time\",\n        onChange: this.handleInputChange,\n        placeholder: \"11:30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"logs__node logs__node--name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"logs__label\",\n        htmlFor: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"select\", {\n        className: \"logs__input req normal-input\",\n        name: \"user\",\n        value: this.state.userId,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C..\"), this.props.users.map(function (user, i) {\n        return React.createElement(\"option\", {\n          key: user.id,\n          value: user.id,\n          \"data-company\": user.company,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, user.name);\n      })))), React.createElement(\"div\", {\n        className: \"logs__pages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.state.logItems.map(function (row, i) {\n        return React.createElement(AddPageLogs, {\n          index: i,\n          key: row.id,\n          id: row.id,\n          currentDate: row.date,\n          remove: _this2.removeNewPage,\n          pageData: _this2.getPageData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"logs-add__buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        className: \"logs__button\",\n        onClick: this.addNewPage,\n        value: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        className: \"logs__button\",\n        onClick: this.addClick,\n        value: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddLogs;\n}(React.Component);\n\nexport default AddLogs;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.logs.add.js"],"names":["React","AddPageLogs","moment","AddLogs","props","handleInputChange","event","target","name","value","parseInt","setState","userId","getUserData","setCurrentDate","addClick","inputsValid","checkInputs","newVisit","id","state","time","date","period","slice","company","pages","logItems","length","long","i","thisPageTime","minutes","format","seconds","add","getRandomLogId","getRandomPageId","title","link","preventDefault","getPageData","page","unUniqueId","currentLogs","rand","Math","random","newId","round","j","addNewPage","newLogItem","push","removeNewPage","splice","userData","users","filter","el","currentDate","reqInputs","document","querySelectorAll","error","classList","remove","previousSibling","inputs","onfocus","onblur","map","user","row","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddPageLogs from './React.logs.add.page';\nimport moment from 'moment'\nimport '../css/main.css';\n\nclass AddLogs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.getRandomLogId(),\n            userId: 'Выбрать...',\n            time: '',\n            date: '',\n            period: '',\n            name: '',\n            company: '',\n            pages: 0,\n            long: '',\n            logItems: [\n                {   \n                    id: this.getRandomPageId(),\n                    title: '',\n                    link: '',\n                    long: '',\n                    date: ''\n                }\n            ]\n        };\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n        if (name === 'user') {\n            const value = parseInt(target.value);\n            this.setState({\n                userId: parseInt(value)\n            }, this.getUserData(value));\n        } else if (name === 'time') {\n            const value = target.value;\n            this.setState({\n                [name]: value\n            });\n        } else if (name === 'date') {\n            const value = target.value;\n            this.setState({\n                [name]: value\n            }, this.setCurrentDate(value));\n        }\n    }\n\n    getUserData(userId) {\n        let userData = this.props.users.filter( el => el.id === userId);\n        \n        this.setState({\n            name: userData[0].name,\n            company: userData[0].company\n        });\n            \n    }\n\n    setCurrentDate(time) {\n        var logItems = this.state.logItems;\n        var currentDate = time.slice(0,5);\n\n        for (let i = 0; i < logItems.length; i++) {\n            logItems[i].date = currentDate;\n        }\n\n        this.setState({\n            logItems: logItems\n        });        \n    }\n    \n    addClick = (event) => {\n        let inputsValid = this.checkInputs();\n\n        if (!inputsValid) {\n            var newVisit = {\n                id: this.state.id,\n                userId: this.state.userId,\n                time: this.state.time,\n                date:  this.state.date,\n                period:  this.state.date.slice(3,10),\n                name: this.state.name,\n                company: this.state.company,\n                pages: this.state.logItems.length,\n                long: moment('00:00', 'mm:ss'),\n                logItems: this.state.logItems\n            };\n\n            for (let i = 0; i < newVisit.logItems.length; i++) {\n                var thisPageTime = moment(newVisit.logItems[i].long, 'mm:ss');\n                var minutes = thisPageTime.format('mm');\n                var seconds = thisPageTime.format('ss');\n                newVisit.long = newVisit.long.add(seconds, 'seconds');\n                newVisit.long = newVisit.long.add(minutes, 'minutes');\n            }\n\n            newVisit.long = newVisit.long.format('mm:ss');\n\n            this.props.add(newVisit);\n        \n            this.setState({\n                id: this.getRandomLogId(),\n                userId: 0,\n                time: '',\n                date: '',\n                name: '',\n                company: '',\n                pages: 0,\n                long: '',\n                logItems: [\n                    {   \n                        id: this.getRandomPageId(),\n                        title: '',\n                        link: '',\n                        long: '',\n                        date: ''\n                    }\n                ]\n            });\n        } else {\n            event.preventDefault();\n        }\n    \n    };\n\n    checkInputs() {\n        var reqInputs = document.querySelectorAll('.req');\n        var error = false;\n\n        for (let i = 0; i < reqInputs.length; i++) {\n            if (reqInputs[i].value === '') {\n                reqInputs[i].classList.remove('normal-input');\n                reqInputs[i].previousSibling.classList.remove('normal-label');\n                reqInputs[i].classList.add('error-input');\n                reqInputs[i].previousSibling.classList.add('error-label');\n                error = true;\n            } \n        }\n        \n        return error;\n    }\n\n    getPageData = (i, page) => {\n        var logItems = this.state.logItems;\n        logItems[i] = page;\n\n        this.setState({\n            logItems: logItems\n        });\n    }\n\n    getRandomLogId = () => {\n        var unUniqueId = true;\n        var currentLogs = this.props.currentLogs;\n        do {\n            var rand = 1000 - 0.5 + Math.random() * (9999 - 1000 + 1)\n            var newId = Math.round(rand);\n            unUniqueId = false;\n\n            for (let i = 0; i < currentLogs.length; i++) {\n                if (currentLogs[i].id == newId) {\n                    unUniqueId = true;\n                }\n            }\n        } while (unUniqueId);\n\n        return newId\n    }\n\n    getRandomPageId = () => {\n        var unUniqueId = true;\n        var currentLogs = this.props.currentLogs;\n        do {\n            var rand = 10000 - 0.5 + Math.random() * (99999 - 1000 + 1)\n            var newId = Math.round(rand);\n            unUniqueId = false;\n\n            for (let i = 0; i < currentLogs.length; i++) {\n                for (let j = 0; j < currentLogs[i].logItems.length; j++) {\n                    if (currentLogs[i].logItems[j].id == newId) {\n                        unUniqueId = true;\n                    }\n                }\n            }\n        } while (unUniqueId);\n\n        return newId\n    }\n\n    addNewPage = () => {\n        var logItems = this.state.logItems;\n        var newLogItem = {\n            id: this.getRandomPageId(),\n            title: '',\n            link: '',\n            long: '',\n            date: this.state.time.slice(0,5)\n        };\n\n        logItems.push(newLogItem);\n\n        this.setState({\n            logItems: logItems,\n        });\n    }\n\n    removeNewPage = (i) => {\n        var logItems = this.state.logItems;\n        \n        if (this.state.logItems.length > 1) {\n            logItems.splice(i, 1);\n        }\n\n        this.setState({\n            logItems: logItems,\n        });\n    };\n\n    componentDidMount() {\n        var inputs = document.querySelectorAll('.logs-add__input');\n        \n        for (let i = 0; i < inputs.length; i++) {\n            inputs[i].onfocus = function() {\n                this.classList.remove('normal-input');\n                this.previousSibling.classList.remove('normal-label');\n                this.classList.remove('error-input');\n                this.previousSibling.classList.remove('error-label');\n                this.classList.add('active-input');\n                this.previousSibling.classList.add('active-label');\n            }\n        }\n\n        for (let i = 0; i < inputs.length; i++) {\n            inputs[i].onblur = function() {\n                this.classList.remove('active-input');\n                this.previousSibling.classList.remove('active-label');\n                this.classList.add('normal-input');\n                this.previousSibling.classList.add('normal-label');\n            } \n        }\n    }\n\n    render() {\n        return (\n            <form className=\"logs__form\" id=\"send__form\" method=\"post\">\n                <div className=\"logs__main\">\n                    <div className=\"logs__node logs-add__node--date\">\n                        <label className=\"logs__label\" htmlFor=\"date\">Дата визита</label>\n                        <input type=\"text\" className=\"logs__input req normal-input\" value={this.state.date} name=\"date\" onChange={this.handleInputChange} placeholder=\"30.04.2019\" />\n                    </div>\n                    <div className=\"logs__node logs__node--time\">\n                        <label className=\"logs__label\" htmlFor=\"time\">Время визита</label>\n                        <input type=\"text\" className=\"logs__input req normal-input\" value={this.state.time} name=\"time\" onChange={this.handleInputChange} placeholder=\"11:30\" />\n                    </div>\n                    <div className=\"logs__node logs__node--name\">\n                        <label className=\"logs__label\" htmlFor=\"user\">Пользователь</label>\n                        <select className=\"logs__input req normal-input\" name=\"user\" value={this.state.userId} onChange={this.handleInputChange}>\n                            <option value=\"\" selected>Выбрать..</option>\n                            {\n                                this.props.users.map((user, i) => (\n                                    <option key={user.id} value={user.id} data-company={user.company}>{user.name}</option>\n                                ))\n                            }\n                        </select>\n                    </div>\n                </div>\n                <div className=\"logs__pages\">\n                {\n                    this.state.logItems.map((row, i) => (\n                        <AddPageLogs\n                            index={i}\n                            key={row.id}\n                            id={row.id}\n                            currentDate={row.date}\n                            remove={this.removeNewPage}\n                            pageData={this.getPageData}\n                        />\n                    ))\n                }\n                </div>\n                <div className=\"logs-add__buttons\">\n                    <input type=\"button\" className=\"logs__button\" onClick={this.addNewPage} value=\"Новая страница\" />\n                    <input type=\"button\" className=\"logs__button\" onClick={this.addClick} value=\"Добавить запись\" />\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default AddLogs;"]},"metadata":{},"sourceType":"module"}