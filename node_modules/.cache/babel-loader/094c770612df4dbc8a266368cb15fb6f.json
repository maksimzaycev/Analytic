{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.day.table.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort as fasSort } from '@fortawesome/free-solid-svg-icons';\nimport DayRowTable from './React.day.table.row';\nimport '../css/main.css';\n\nvar DayTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DayTable, _React$Component);\n\n  function DayTable(props) {\n    var _this;\n\n    _classCallCheck(this, DayTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DayTable).call(this, props));\n\n    _this.sortByVisits = function () {\n      var toggleSort = _this.state.waySortVisits;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.visits - b.visits;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortVisits: toggleSort\n      });\n    };\n\n    _this.sortByViews = function () {\n      var toggleSort = _this.state.waySortViews;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.views - b.views;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortViews: toggleSort\n      });\n    };\n\n    _this.sortByTime = function () {\n      var toggleSort = _this.state.waySortTime;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var timeA = a.start.toLowerCase();\n        var timeB = b.start.toLowerCase();\n        if (timeA < timeB) return -1;\n        if (timeA > timeB) return 1;\n        return 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortTime: toggleSort\n      });\n    };\n\n    _this.state = {\n      rows: _this.props.rows,\n      waySortVisits: true,\n      waySortViews: true,\n      waySortTime: true\n    };\n    return _this;\n  }\n\n  _createClass(DayTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        className: \"day__table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"day__row--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"day__cell day__cell--head day__cell--period\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \" \\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B\"), React.createElement(\"td\", {\n        className: \"day__cell day__cell--head day__cell--users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByVisits,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \" \\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438\"), React.createElement(\"td\", {\n        className: \"day__cell day__cell--head day__cell--visits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByVisits,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \" \\u0412\\u0438\\u0437\\u0438\\u0442\\u044B\"), React.createElement(\"td\", {\n        className: \"day__cell day__cell--head day__cell--views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByViews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), \" \\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u044B\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.rows.map(function (row, i) {\n        return React.createElement(DayRowTable, {\n          key: i,\n          index: i,\n          id: row.id,\n          start: row.start,\n          finish: row.finish,\n          users: row.users,\n          visits: row.visits,\n          views: row.views,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return DayTable;\n}(React.Component);\n\nexport default DayTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.day.table.js"],"names":["React","FontAwesomeIcon","faSort","fasSort","DayRowTable","DayTable","props","sortByVisits","toggleSort","state","waySortVisits","sortRows","rows","sort","a","b","visits","reverse","setState","sortByViews","waySortViews","views","sortByTime","waySortTime","timeA","start","toLowerCase","timeB","nextProps","map","row","i","id","finish","users","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort as fasSort} from '@fortawesome/free-solid-svg-icons'\nimport DayRowTable from './React.day.table.row';\nimport '../css/main.css';\n\nclass DayTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: this.props.rows,\n            waySortVisits: true,\n            waySortViews: true,\n            waySortTime: true\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            rows: nextProps.rows\n        });\n    }\n\n    sortByVisits = () => {\n        var toggleSort = this.state.waySortVisits;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.visits - b.visits\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortVisits: toggleSort\n        });\n    };\n\n    sortByViews = () => {\n        var toggleSort = this.state.waySortViews;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.views - b.views\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortViews: toggleSort\n        });\n    };\n\n    sortByTime = () => {\n        var toggleSort = this.state.waySortTime;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            var timeA = a.start.toLowerCase();\n            var timeB = b.start.toLowerCase();\n            if (timeA < timeB)\n                return -1\n            if (timeA > timeB)\n                return 1\n            return 0\n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortTime: toggleSort\n        });\n    };\n\n    render() {\n        return (\n            <table className=\"day__table\">\n                <thead>\n                    <tr className=\"day__row--head\">\n                        <td className=\"day__cell day__cell--head day__cell--period\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByTime} /> Интервал</td>\n                        <td className=\"day__cell day__cell--head day__cell--users\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByVisits} /> Пользователи</td>\n                        <td className=\"day__cell day__cell--head day__cell--visits\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByVisits} /> Визиты</td>\n                        <td className=\"day__cell day__cell--head day__cell--views\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByViews} /> Просмотры</td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    this.state.rows.map((row, i) => (\n                        <DayRowTable\n                            key={i}\n                            index={i}\n                            id={row.id}\n                            start={row.start}\n                            finish={row.finish}\n                            users={row.users}\n                            visits={row.visits}\n                            views={row.views}\n                        /> )\n                    )\n                }\n                </tbody>\n\n            </table>\n        );\n    }\n\n}\n\nexport default DayTable;\n"]},"metadata":{},"sourceType":"module"}