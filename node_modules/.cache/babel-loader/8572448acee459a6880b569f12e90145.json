{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.day.js\";\nimport React from 'react';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport DayWorkspace from './React.day.workspace';\nimport '../css/main.css';\nvar urlLogs = 'http://localhost:3000/logs';\n\nvar Day =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Day, _React$Component);\n\n  function Day(props) {\n    var _this;\n\n    _classCallCheck(this, Day);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Day).call(this, props));\n\n    _this.setDate = function (changedDate) {\n      var formatedDate = moment(changedDate, 'YYYY-MM-DD').format('DD.MM.YYYY');\n\n      _this.setState({\n        loading: false\n      }, _this.loadData(formatedDate));\n    };\n\n    _this.state = {\n      chartDayVisits: [],\n      chartDayViews: [],\n      tableDay: [],\n      settingDate: moment(new Date()).format('DD.MM.YYYY'),\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Day, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadData(this.state.settingDate);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData(date) {\n      var _this2 = this;\n\n      console.log(\"Загружаемая дата:\");\n      console.log(date);\n      fetch(urlLogs + '?date=' + date).then(function (response) {\n        console.log(response);\n        return response.json();\n      }).then(function (result) {\n        return _this2.parseData(result, date);\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(usersLogs, date) {\n      var chartDayUsers = this.getChartDayUsers(usersLogs);\n      var chartDayVisits = this.getChartDayVisits(usersLogs);\n      var chartDayViews = this.getChartDayViews(usersLogs);\n      var chartDayDefault = this.getChartDayDefault();\n      var tableDay = this.getTableDay(chartDayVisits, chartDayViews, chartDayUsers);\n      var charts = {\n        visits: {\n          chartId: 4501,\n          data: chartDayVisits,\n          display: true,\n          color: '#3fa6e9'\n        },\n        views: {\n          chartId: 4502,\n          data: chartDayViews,\n          display: true,\n          color: '#127bbf'\n        },\n        users: {\n          chartId: 4503,\n          data: chartDayUsers,\n          display: true,\n          color: '#84c9f6'\n        },\n        default: {\n          chartId: 4504,\n          data: chartDayDefault,\n          display: true,\n          color: '#127bbf'\n        }\n      };\n      this.setState({\n        charts: charts,\n        tableDay: tableDay,\n        settingDate: date,\n        loading: true\n      });\n    }\n  }, {\n    key: \"getChartDayUsers\",\n    value: function getChartDayUsers(userLogs) {\n      var dayData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var usersInThisHour = [];\n\n        for (var j = 0; j < userLogs.length; j++) {\n          var visitTime = moment(userLogs[j].time, 'HH:mm');\n\n          if (visitTime.isBetween(startHour, finishHour, 'hours', '[)') && usersInThisHour.indexOf(userLogs[j].userId) === -1) {\n            usersInThisHour.push(userLogs[j].userId);\n          }\n        }\n\n        var hourData = {\n          x: startHour.format('HH:mm'),\n          y: usersInThisHour.length\n        };\n        dayData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return dayData;\n    }\n  }, {\n    key: \"getChartDayVisits\",\n    value: function getChartDayVisits(userLogs) {\n      var dayData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var hourData = {\n          x: startHour.format('HH:mm'),\n          y: 0\n        };\n\n        for (var j = 0; j < userLogs.length; j++) {\n          var visitTime = moment(userLogs[j].time, 'HH:mm');\n\n          if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n            hourData.y++;\n          }\n        }\n\n        dayData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return dayData;\n    }\n  }, {\n    key: \"getChartDayViews\",\n    value: function getChartDayViews(userLogs) {\n      var dayData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var hourData = {\n          x: startHour.format('HH:mm'),\n          y: 0\n        };\n\n        for (var j = 0; j < userLogs.length; j++) {\n          var visitTime = moment(userLogs[j].time, 'HH:mm');\n\n          if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n            hourData.y += userLogs[j].logItems.length;\n          }\n        }\n\n        dayData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return dayData;\n    }\n  }, {\n    key: \"getChartDayDefault\",\n    value: function getChartDayDefault() {\n      var dayData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var hourData = {\n          x: startHour.format('HH:mm'),\n          y: 0\n        };\n        dayData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return dayData;\n    }\n  }, {\n    key: \"getTableDay\",\n    value: function getTableDay(visitsChart, viewsChart, usersChart) {\n      var tableData = [];\n      var startHour = moment('00:00', 'HH:mm');\n      var finishHour = moment('01:00', 'HH:mm');\n\n      for (var i = 0; i < 24; i++) {\n        var hourData = {\n          start: startHour.format('HH:mm'),\n          finish: finishHour.format('HH:mm'),\n          users: usersChart[i].y,\n          visits: visitsChart[i].y,\n          views: viewsChart[i].y\n        };\n        tableData.push(hourData);\n        startHour = startHour.add(1, \"hours\");\n        finishHour = finishHour.add(1, \"hours\");\n      }\n\n      return tableData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"maskComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, !this.state.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"sidebar\",\n        id: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        activeItem: 7711,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel\",\n        id: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(DayWorkspace, {\n        charts: this.state.charts,\n        tableDay: this.state.tableDay,\n        settingDate: this.state.settingDate,\n        setDate: this.setDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Day;\n}(React.Component);\n\nexport default Day;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.day.js"],"names":["React","Navigation","Loader","moment","DayWorkspace","urlLogs","Day","props","setDate","changedDate","formatedDate","format","setState","loading","loadData","state","chartDayVisits","chartDayViews","tableDay","settingDate","Date","date","console","log","fetch","then","response","json","result","parseData","catch","e","usersLogs","chartDayUsers","getChartDayUsers","getChartDayVisits","getChartDayViews","chartDayDefault","getChartDayDefault","getTableDay","charts","visits","chartId","data","display","color","views","users","default","userLogs","dayData","startHour","finishHour","i","usersInThisHour","j","length","visitTime","time","isBetween","indexOf","userId","push","hourData","x","y","add","logItems","visitsChart","viewsChart","usersChart","tableData","start","finish","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './React.nav';\nimport Loader from './React.loader';\nimport moment from 'moment';\nimport DayWorkspace from './React.day.workspace';\nimport '../css/main.css';\n\nconst urlLogs = 'http://localhost:3000/logs';\n\nclass Day extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartDayVisits: [],\n            chartDayViews: [],\n            tableDay: [],\n            settingDate: moment(new Date()).format('DD.MM.YYYY'), \n            loading: false\n        };\n    }\n\n    componentWillMount() {\n        this.loadData(this.state.settingDate);\n    }\n\n    loadData(date) {\n        console.log(\"Загружаемая дата:\");\n        console.log(date);\n        fetch(urlLogs + '?date=' + date)\n            .then(function(response) {\n                console.log(response);\n                return response.json();\n            })\n            .then(result => this.parseData(result, date))\n            .catch(e => console.log(e));\n    }\n\n    parseData(usersLogs, date) {\n        var chartDayUsers = this.getChartDayUsers(usersLogs);\n        var chartDayVisits = this.getChartDayVisits(usersLogs);\n        var chartDayViews = this.getChartDayViews(usersLogs);\n        var chartDayDefault = this.getChartDayDefault();\n        var tableDay = this.getTableDay(chartDayVisits, chartDayViews, chartDayUsers);\n        var charts = {\n            visits: {\n                chartId: 4501,\n                data: chartDayVisits,\n                display: true,\n                color: '#3fa6e9'\n            },\n            views: {\n                chartId: 4502,\n                data: chartDayViews,\n                display: true,\n                color: '#127bbf'\n            },\n            users: {\n                chartId: 4503,\n                data: chartDayUsers,\n                display: true,\n                color: '#84c9f6'\n            },\n            default: {\n                chartId: 4504,\n                data: chartDayDefault,\n                display: true,\n                color: '#127bbf'\n            }\n        };\n\n        this.setState({\n            charts: charts,\n            tableDay: tableDay,\n            settingDate: date,\n            loading: true\n        });\n    }\n\n    setDate = (changedDate) => {\n        var formatedDate = moment(changedDate, 'YYYY-MM-DD').format('DD.MM.YYYY');\n\n        this.setState({\n            loading: false\n        }, this.loadData(formatedDate));\n    }\n\n    getChartDayUsers(userLogs) {\n        var dayData = [];\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            let usersInThisHour = [];\n\n            for (let j = 0; j < userLogs.length; j++) {\n                var visitTime = moment(userLogs[j].time, 'HH:mm');\n                if (visitTime.isBetween(startHour, finishHour, 'hours', '[)') && (usersInThisHour.indexOf(userLogs[j].userId) === -1)) {\n                    usersInThisHour.push(userLogs[j].userId);\n                }\n            }\n\n            var hourData = {\n                x: startHour.format('HH:mm'),\n                y: usersInThisHour.length\n            }\n\n            dayData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return dayData;\n    }\n\n    getChartDayVisits(userLogs) {\n        var dayData = [];\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            var hourData = {\n                x: startHour.format('HH:mm'),\n                y: 0\n            }\n\n            for (let j = 0; j < userLogs.length; j++) {\n                var visitTime = moment(userLogs[j].time, 'HH:mm');\n                if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n                    hourData.y++;\n                }\n            }\n\n            dayData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return dayData;\n    }\n\n    getChartDayViews(userLogs) {\n        var dayData = [];\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            var hourData = {\n                x: startHour.format('HH:mm'),\n                y: 0\n            }\n\n            for (let j = 0; j < userLogs.length; j++) {\n                var visitTime = moment(userLogs[j].time, 'HH:mm');\n                if (visitTime.isBetween(startHour, finishHour, 'hours', '[)')) {\n                    hourData.y += userLogs[j].logItems.length;\n                }\n            }\n\n            dayData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return dayData;\n    }\n\n    getChartDayDefault() {\n        var dayData = [];\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            var hourData = {\n                x: startHour.format('HH:mm'),\n                y: 0\n            }\n\n            dayData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return dayData;\n    }\n\n    getTableDay(visitsChart,viewsChart,usersChart) {\n        var tableData = [];\n\n        var startHour = moment('00:00', 'HH:mm');\n        var finishHour = moment('01:00', 'HH:mm');\n\n        for (let i = 0; i < 24; i++) {\n            var hourData = {\n                start: startHour.format('HH:mm'),\n                finish: finishHour.format('HH:mm'),\n                users: usersChart[i].y,\n                visits: visitsChart[i].y,\n                views: viewsChart[i].y\n            }\n\n            tableData.push(hourData);\n            startHour = startHour.add(1, \"hours\");\n            finishHour = finishHour.add(1, \"hours\");\n        }\n\n        return tableData;\n    }\n\n    render() {\n        return (\n            <div id=\"maskComponent\">\n                {!this.state.loading ? <Loader /> : null}\n                <div className=\"sidebar\" id=\"sidebar\">\n                    <Navigation activeItem={7711} />\n                </div>\n                <div className=\"panel\" id=\"panel\">\n                    <DayWorkspace\n                        charts={this.state.charts}\n                        tableDay={this.state.tableDay}\n                        settingDate={this.state.settingDate}\n                        setDate={this.setDate}\n                    />\n                </div>                        \n            </div>\n        );\n    }\n}\n\nexport default Day;\n\n"]},"metadata":{},"sourceType":"module"}