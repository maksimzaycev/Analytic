{"ast":null,"code":"import _classCallCheck from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksimzajcev/Desktop/Work/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksimzajcev/Desktop/Work/src/components/React.errors.table.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort as fasSort } from '@fortawesome/free-solid-svg-icons';\nimport ErrorsRowTable from './React.errors.table.row';\nimport ErrorsRowNull from './React.errors.table.rowNull';\nimport '../css/main.css';\n\nvar ErrorsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ErrorsTable, _React$Component);\n\n  function ErrorsTable(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorsTable).call(this, props));\n\n    _this.sortByTime = function () {\n      var toggleSort = _this.state.waySortTime;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.time, 'DD.MM HH:mm');\n        var dateB = moment(a.time, 'DD.MM HH:mm');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortTime: toggleSort\n      });\n    };\n\n    _this.sortByCode = function () {\n      var toggleSort = _this.state.waySortCode;\n      var sortRows = _this.state.rows;\n      sortRows.sort(function (a, b) {\n        return a.code - b.code;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      _this.setState({\n        rows: sortRows,\n        waySortCode: toggleSort\n      });\n    };\n\n    _this.state = {\n      rows: _this.props.rows,\n      waySortCode: false,\n      waySortTime: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorsTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var sortRows = nextProps.rows;\n      var toggleSort = this.state.waySortTime;\n      sortRows.sort(function (a, b) {\n        var dateA = moment(b.time, 'DD.MM HH:mm');\n        var dateB = moment(a.time, 'DD.MM HH:mm');\n        return dateA > dateB ? -1 : a < b ? 1 : 0;\n      });\n\n      if (toggleSort) {\n        sortRows.reverse();\n      }\n\n      if (toggleSort) {\n        toggleSort = false;\n      } else {\n        toggleSort = true;\n      }\n\n      this.setState({\n        rows: sortRows,\n        waySortTime: toggleSort\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"table__row table__row--head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"table__cell table__cell--head table__cell--time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), \" \\u0414\\u0430\\u0442\\u0430\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--head table__cell--code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"sortIcon\",\n        icon: fasSort,\n        color: \"#0079c2\",\n        onClick: this.sortByCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \" \\u041A\\u043E\\u0434 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"), React.createElement(\"td\", {\n        className: \"table__cell table__cell--head table__cell--text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.rows.length !== 0 ? this.state.rows.map(function (row, i) {\n        return React.createElement(ErrorsRowTable, {\n          key: i,\n          index: i,\n          id: row.id,\n          time: row.time,\n          code: row.code,\n          text: row.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      }) : React.createElement(ErrorsRowNull, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ErrorsTable;\n}(React.Component);\n\nexport default ErrorsTable;","map":{"version":3,"sources":["/Users/maksimzajcev/Desktop/Work/src/components/React.errors.table.js"],"names":["React","moment","FontAwesomeIcon","faSort","fasSort","ErrorsRowTable","ErrorsRowNull","ErrorsTable","props","sortByTime","toggleSort","state","waySortTime","sortRows","rows","sort","a","b","dateA","time","dateB","reverse","setState","sortByCode","waySortCode","code","nextProps","length","map","row","i","id","text","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort as fasSort} from '@fortawesome/free-solid-svg-icons'\nimport ErrorsRowTable from './React.errors.table.row';\nimport ErrorsRowNull from './React.errors.table.rowNull';\nimport '../css/main.css';\n\nclass ErrorsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: this.props.rows,\n            waySortCode: false,\n            waySortTime: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        var sortRows = nextProps.rows;\n        var toggleSort = this.state.waySortTime;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.time, 'DD.MM HH:mm');\n            let dateB = moment(a.time, 'DD.MM HH:mm');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;  \n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortTime: toggleSort\n        });\n\n    }\n\n    sortByTime = () => {\n        let toggleSort = this.state.waySortTime;\n        let sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            let dateA = moment(b.time, 'DD.MM HH:mm');\n            let dateB = moment(a.time, 'DD.MM HH:mm');\n            return dateA > dateB ? -1 : a < b ? 1 : 0;  \n        });\n\n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortTime: toggleSort\n        });\n    };\n\n\n    sortByCode = () => {\n        var toggleSort = this.state.waySortCode;\n        var sortRows = this.state.rows;\n\n        sortRows.sort(function(a, b) {\n            return a.code - b.code\n        });\n        \n        if (toggleSort) {\n            sortRows.reverse();\n        }\n\n        if (toggleSort) {\n            toggleSort = false;\n        } else {\n            toggleSort = true;\n        }\n\n        this.setState({\n            rows: sortRows,\n            waySortCode: toggleSort\n        });\n    };\n\n    render() {\n        return (\n            <table className=\"table\">\n                <thead>\n                    <tr className=\"table__row table__row--head\">\n                        <td className=\"table__cell table__cell--head table__cell--time\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByTime} /> Дата</td>\n                        <td className=\"table__cell table__cell--head table__cell--code\"><FontAwesomeIcon className=\"sortIcon\" icon={fasSort} color=\"#0079c2\" onClick={this.sortByCode} /> Код события</td>\n                        <td className=\"table__cell table__cell--head table__cell--text\">Описание события</td>\n                    </tr>\n                </thead>\n                <tbody>\n\n                {\n                    (this.state.rows.length !== 0) ? (\n                    this.state.rows.map((row, i) => (\n                        <ErrorsRowTable\n                            key={i}\n                            index={i}\n                            id={row.id}\n                            time={row.time}\n                            code={row.code}\n                            text={row.text}\n                        /> )\n                    )) : <ErrorsRowNull />\n                }\n                </tbody>\n\n            </table>\n        );\n    }\n\n}\n\nexport default ErrorsTable;\n"]},"metadata":{},"sourceType":"module"}